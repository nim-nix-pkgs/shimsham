import threefish
include util

const
  CipherSize = 1024
  CipherQWords = CipherSize div 64
  ExpandedKeySize = CipherQWords + 1

type
  Threefish1024Obj = object of CipherInternal
    expandedTweak: array[ExpandedTweakSize, uint64]
    expandedKey: array[ExpandedKeySize, uint64]
    tmpData1, tmpData2: array[CipherQWords, uint64]
  Threefish1024* = ref Threefish1024Obj

proc getTempData*(c: Cipher): tuple[a, b: seq[uint64]] =
  var tf = Threefish1024(c)
  result = (@(tf.tmpData1), @(tf.tmpData2))

proc setTweak*(c: Cipher, tweak: openarray[uint64]) =
  var tf = Threefish1024(c)
  setTweak(tweak, tf.expandedTweak)

proc setKey(c: Cipher, key: openarray[uint64]) =
  var tf = Threefish1024(c)
  setKey(key, tf.expandedKey)

proc encrypt(c: Cipher, input: openarray[uint64],
    output: var openarray[uint64]) {.noSideEffect.} =
  var tf = Threefish1024(c)
  var
    b0 = input[0]
    b1 = input[1]
    b2 = input[2]
    b3 = input[3]
    b4 = input[4]
    b5 = input[5]
    b6 = input[6]
    b7 = input[7]
    b8 = input[8]
    b9 = input[9]
    b10 = input[10]
    b11 = input[11]
    b12 = input[12]
    b13 = input[13]
    b14 = input[14]
    b15 = input[15]

    k0 = tf.expandedKey[0]
    k1 = tf.expandedKey[1]
    k2 = tf.expandedKey[2]
    k3 = tf.expandedKey[3]
    k4 = tf.expandedKey[4]
    k5 = tf.expandedKey[5]
    k6 = tf.expandedKey[6]
    k7 = tf.expandedKey[7]
    k8 = tf.expandedKey[8]
    k9 = tf.expandedKey[9]
    k10 = tf.expandedKey[10]
    k11 = tf.expandedKey[11]
    k12 = tf.expandedKey[12]
    k13 = tf.expandedKey[13]
    k14 = tf.expandedKey[14]
    k15 = tf.expandedKey[15]
    k16 = tf.expandedKey[16]

    t0 = tf.expandedTweak[0]
    t1 = tf.expandedTweak[1]
    t2 = tf.expandedTweak[2]

  block encryption:
    b1 += k1
    b0 += b1 + k0
    b1 = ((b1 shl 24) or (b1 shr (64 - 24))) xor b0
    b3 += k3
    b2 += b3 + k2
    b3 = ((b3 shl 13) or (b3 shr (64 - 13))) xor b2
    b5 += k5
    b4 += b5 + k4
    b5 = ((b5 shl 8) or (b5 shr (64 - 8))) xor b4
    b7 += k7
    b6 += b7 + k6
    b7 = ((b7 shl 47) or (b7 shr (64 - 47))) xor b6
    b9 += k9
    b8 += b9 + k8
    b9 = ((b9 shl 8) or (b9 shr (64 - 8))) xor b8
    b11 += k11
    b10 += b11 + k10
    b11 = ((b11 shl 17) or (b11 shr (64 - 17))) xor b10
    b13 += k13 + t0
    b12 += b13 + k12
    b13 = ((b13 shl 22) or (b13 shr (64 - 22))) xor b12
    b15 += k15
    b14 += b15 + k14 + t1
    b15 = ((b15 shl 37) or (b15 shr (64 - 37))) xor b14
    b0 += b9
    b9 = ((b9 shl 38) or (b9 shr (64 - 38))) xor b0
    b2 += b13
    b13 = ((b13 shl 19) or (b13 shr (64 - 19))) xor b2
    b6 += b11
    b11 = ((b11 shl 10) or (b11 shr (64 - 10))) xor b6
    b4 += b15
    b15 = ((b15 shl 55) or (b15 shr (64 - 55))) xor b4
    b10 += b7
    b7 = ((b7 shl 49) or (b7 shr (64 - 49))) xor b10
    b12 += b3
    b3 = ((b3 shl 18) or (b3 shr (64 - 18))) xor b12
    b14 += b5
    b5 = ((b5 shl 23) or (b5 shr (64 - 23))) xor b14
    b8 += b1
    b1 = ((b1 shl 52) or (b1 shr (64 - 52))) xor b8
    b0 += b7
    b7 = ((b7 shl 33) or (b7 shr (64 - 33))) xor b0
    b2 += b5
    b5 = ((b5 shl 4) or (b5 shr (64 - 4))) xor b2
    b4 += b3
    b3 = ((b3 shl 51) or (b3 shr (64 - 51))) xor b4
    b6 += b1
    b1 = ((b1 shl 13) or (b1 shr (64 - 13))) xor b6
    b12 += b15
    b15 = ((b15 shl 34) or (b15 shr (64 - 34))) xor b12
    b14 += b13
    b13 = ((b13 shl 41) or (b13 shr (64 - 41))) xor b14
    b8 += b11
    b11 = ((b11 shl 59) or (b11 shr (64 - 59))) xor b8
    b10 += b9
    b9 = ((b9 shl 17) or (b9 shr (64 - 17))) xor b10
    b0 += b15
    b15 = ((b15 shl 5) or (b15 shr (64 - 5))) xor b0
    b2 += b11
    b11 = ((b11 shl 20) or (b11 shr (64 - 20))) xor b2
    b6 += b13
    b13 = ((b13 shl 48) or (b13 shr (64 - 48))) xor b6
    b4 += b9
    b9 = ((b9 shl 41) or (b9 shr (64 - 41))) xor b4
    b14 += b1
    b1 = ((b1 shl 47) or (b1 shr (64 - 47))) xor b14
    b8 += b5
    b5 = ((b5 shl 28) or (b5 shr (64 - 28))) xor b8
    b10 += b3
    b3 = ((b3 shl 16) or (b3 shr (64 - 16))) xor b10
    b12 += b7
    b7 = ((b7 shl 25) or (b7 shr (64 - 25))) xor b12
    b1 += k2
    b0 += b1 + k1
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b0
    b3 += k4
    b2 += b3 + k3
    b3 = ((b3 shl 9) or (b3 shr (64 - 9))) xor b2
    b5 += k6
    b4 += b5 + k5
    b5 = ((b5 shl 37) or (b5 shr (64 - 37))) xor b4
    b7 += k8
    b6 += b7 + k7
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b6
    b9 += k10
    b8 += b9 + k9
    b9 = ((b9 shl 12) or (b9 shr (64 - 12))) xor b8
    b11 += k12
    b10 += b11 + k11
    b11 = ((b11 shl 47) or (b11 shr (64 - 47))) xor b10
    b13 += k14 + t1
    b12 += b13 + k13
    b13 = ((b13 shl 44) or (b13 shr (64 - 44))) xor b12
    b15 += k16 + 1
    b14 += b15 + k15 + t2
    b15 = ((b15 shl 30) or (b15 shr (64 - 30))) xor b14
    b0 += b9
    b9 = ((b9 shl 16) or (b9 shr (64 - 16))) xor b0
    b2 += b13
    b13 = ((b13 shl 34) or (b13 shr (64 - 34))) xor b2
    b6 += b11
    b11 = ((b11 shl 56) or (b11 shr (64 - 56))) xor b6
    b4 += b15
    b15 = ((b15 shl 51) or (b15 shr (64 - 51))) xor b4
    b10 += b7
    b7 = ((b7 shl 4) or (b7 shr (64 - 4))) xor b10
    b12 += b3
    b3 = ((b3 shl 53) or (b3 shr (64 - 53))) xor b12
    b14 += b5
    b5 = ((b5 shl 42) or (b5 shr (64 - 42))) xor b14
    b8 += b1
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b8
    b0 += b7
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b0
    b2 += b5
    b5 = ((b5 shl 44) or (b5 shr (64 - 44))) xor b2
    b4 += b3
    b3 = ((b3 shl 47) or (b3 shr (64 - 47))) xor b4
    b6 += b1
    b1 = ((b1 shl 46) or (b1 shr (64 - 46))) xor b6
    b12 += b15
    b15 = ((b15 shl 19) or (b15 shr (64 - 19))) xor b12
    b14 += b13
    b13 = ((b13 shl 42) or (b13 shr (64 - 42))) xor b14
    b8 += b11
    b11 = ((b11 shl 44) or (b11 shr (64 - 44))) xor b8
    b10 += b9
    b9 = ((b9 shl 25) or (b9 shr (64 - 25))) xor b10
    b0 += b15
    b15 = ((b15 shl 9) or (b15 shr (64 - 9))) xor b0
    b2 += b11
    b11 = ((b11 shl 48) or (b11 shr (64 - 48))) xor b2
    b6 += b13
    b13 = ((b13 shl 35) or (b13 shr (64 - 35))) xor b6
    b4 += b9
    b9 = ((b9 shl 52) or (b9 shr (64 - 52))) xor b4
    b14 += b1
    b1 = ((b1 shl 23) or (b1 shr (64 - 23))) xor b14
    b8 += b5
    b5 = ((b5 shl 31) or (b5 shr (64 - 31))) xor b8
    b10 += b3
    b3 = ((b3 shl 37) or (b3 shr (64 - 37))) xor b10
    b12 += b7
    b7 = ((b7 shl 20) or (b7 shr (64 - 20))) xor b12
    b1 += k3
    b0 += b1 + k2
    b1 = ((b1 shl 24) or (b1 shr (64 - 24))) xor b0
    b3 += k5
    b2 += b3 + k4
    b3 = ((b3 shl 13) or (b3 shr (64 - 13))) xor b2
    b5 += k7
    b4 += b5 + k6
    b5 = ((b5 shl 8) or (b5 shr (64 - 8))) xor b4
    b7 += k9
    b6 += b7 + k8
    b7 = ((b7 shl 47) or (b7 shr (64 - 47))) xor b6
    b9 += k11
    b8 += b9 + k10
    b9 = ((b9 shl 8) or (b9 shr (64 - 8))) xor b8
    b11 += k13
    b10 += b11 + k12
    b11 = ((b11 shl 17) or (b11 shr (64 - 17))) xor b10
    b13 += k15 + t2
    b12 += b13 + k14
    b13 = ((b13 shl 22) or (b13 shr (64 - 22))) xor b12
    b15 += k0 + 2
    b14 += b15 + k16 + t0
    b15 = ((b15 shl 37) or (b15 shr (64 - 37))) xor b14
    b0 += b9
    b9 = ((b9 shl 38) or (b9 shr (64 - 38))) xor b0
    b2 += b13
    b13 = ((b13 shl 19) or (b13 shr (64 - 19))) xor b2
    b6 += b11
    b11 = ((b11 shl 10) or (b11 shr (64 - 10))) xor b6
    b4 += b15
    b15 = ((b15 shl 55) or (b15 shr (64 - 55))) xor b4
    b10 += b7
    b7 = ((b7 shl 49) or (b7 shr (64 - 49))) xor b10
    b12 += b3
    b3 = ((b3 shl 18) or (b3 shr (64 - 18))) xor b12
    b14 += b5
    b5 = ((b5 shl 23) or (b5 shr (64 - 23))) xor b14
    b8 += b1
    b1 = ((b1 shl 52) or (b1 shr (64 - 52))) xor b8
    b0 += b7
    b7 = ((b7 shl 33) or (b7 shr (64 - 33))) xor b0
    b2 += b5
    b5 = ((b5 shl 4) or (b5 shr (64 - 4))) xor b2
    b4 += b3
    b3 = ((b3 shl 51) or (b3 shr (64 - 51))) xor b4
    b6 += b1
    b1 = ((b1 shl 13) or (b1 shr (64 - 13))) xor b6
    b12 += b15
    b15 = ((b15 shl 34) or (b15 shr (64 - 34))) xor b12
    b14 += b13
    b13 = ((b13 shl 41) or (b13 shr (64 - 41))) xor b14
    b8 += b11
    b11 = ((b11 shl 59) or (b11 shr (64 - 59))) xor b8
    b10 += b9
    b9 = ((b9 shl 17) or (b9 shr (64 - 17))) xor b10
    b0 += b15
    b15 = ((b15 shl 5) or (b15 shr (64 - 5))) xor b0
    b2 += b11
    b11 = ((b11 shl 20) or (b11 shr (64 - 20))) xor b2
    b6 += b13
    b13 = ((b13 shl 48) or (b13 shr (64 - 48))) xor b6
    b4 += b9
    b9 = ((b9 shl 41) or (b9 shr (64 - 41))) xor b4
    b14 += b1
    b1 = ((b1 shl 47) or (b1 shr (64 - 47))) xor b14
    b8 += b5
    b5 = ((b5 shl 28) or (b5 shr (64 - 28))) xor b8
    b10 += b3
    b3 = ((b3 shl 16) or (b3 shr (64 - 16))) xor b10
    b12 += b7
    b7 = ((b7 shl 25) or (b7 shr (64 - 25))) xor b12
    b1 += k4
    b0 += b1 + k3
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b0
    b3 += k6
    b2 += b3 + k5
    b3 = ((b3 shl 9) or (b3 shr (64 - 9))) xor b2
    b5 += k8
    b4 += b5 + k7
    b5 = ((b5 shl 37) or (b5 shr (64 - 37))) xor b4
    b7 += k10
    b6 += b7 + k9
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b6
    b9 += k12
    b8 += b9 + k11
    b9 = ((b9 shl 12) or (b9 shr (64 - 12))) xor b8
    b11 += k14
    b10 += b11 + k13
    b11 = ((b11 shl 47) or (b11 shr (64 - 47))) xor b10
    b13 += k16 + t0
    b12 += b13 + k15
    b13 = ((b13 shl 44) or (b13 shr (64 - 44))) xor b12
    b15 += k1 + 3
    b14 += b15 + k0 + t1
    b15 = ((b15 shl 30) or (b15 shr (64 - 30))) xor b14
    b0 += b9
    b9 = ((b9 shl 16) or (b9 shr (64 - 16))) xor b0
    b2 += b13
    b13 = ((b13 shl 34) or (b13 shr (64 - 34))) xor b2
    b6 += b11
    b11 = ((b11 shl 56) or (b11 shr (64 - 56))) xor b6
    b4 += b15
    b15 = ((b15 shl 51) or (b15 shr (64 - 51))) xor b4
    b10 += b7
    b7 = ((b7 shl 4) or (b7 shr (64 - 4))) xor b10
    b12 += b3
    b3 = ((b3 shl 53) or (b3 shr (64 - 53))) xor b12
    b14 += b5
    b5 = ((b5 shl 42) or (b5 shr (64 - 42))) xor b14
    b8 += b1
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b8
    b0 += b7
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b0
    b2 += b5
    b5 = ((b5 shl 44) or (b5 shr (64 - 44))) xor b2
    b4 += b3
    b3 = ((b3 shl 47) or (b3 shr (64 - 47))) xor b4
    b6 += b1
    b1 = ((b1 shl 46) or (b1 shr (64 - 46))) xor b6
    b12 += b15
    b15 = ((b15 shl 19) or (b15 shr (64 - 19))) xor b12
    b14 += b13
    b13 = ((b13 shl 42) or (b13 shr (64 - 42))) xor b14
    b8 += b11
    b11 = ((b11 shl 44) or (b11 shr (64 - 44))) xor b8
    b10 += b9
    b9 = ((b9 shl 25) or (b9 shr (64 - 25))) xor b10
    b0 += b15
    b15 = ((b15 shl 9) or (b15 shr (64 - 9))) xor b0
    b2 += b11
    b11 = ((b11 shl 48) or (b11 shr (64 - 48))) xor b2
    b6 += b13
    b13 = ((b13 shl 35) or (b13 shr (64 - 35))) xor b6
    b4 += b9
    b9 = ((b9 shl 52) or (b9 shr (64 - 52))) xor b4
    b14 += b1
    b1 = ((b1 shl 23) or (b1 shr (64 - 23))) xor b14
    b8 += b5
    b5 = ((b5 shl 31) or (b5 shr (64 - 31))) xor b8
    b10 += b3
    b3 = ((b3 shl 37) or (b3 shr (64 - 37))) xor b10
    b12 += b7
    b7 = ((b7 shl 20) or (b7 shr (64 - 20))) xor b12
    b1 += k5
    b0 += b1 + k4
    b1 = ((b1 shl 24) or (b1 shr (64 - 24))) xor b0
    b3 += k7
    b2 += b3 + k6
    b3 = ((b3 shl 13) or (b3 shr (64 - 13))) xor b2
    b5 += k9
    b4 += b5 + k8
    b5 = ((b5 shl 8) or (b5 shr (64 - 8))) xor b4
    b7 += k11
    b6 += b7 + k10
    b7 = ((b7 shl 47) or (b7 shr (64 - 47))) xor b6
    b9 += k13
    b8 += b9 + k12
    b9 = ((b9 shl 8) or (b9 shr (64 - 8))) xor b8
    b11 += k15
    b10 += b11 + k14
    b11 = ((b11 shl 17) or (b11 shr (64 - 17))) xor b10
    b13 += k0 + t1
    b12 += b13 + k16
    b13 = ((b13 shl 22) or (b13 shr (64 - 22))) xor b12
    b15 += k2 + 4
    b14 += b15 + k1 + t2
    b15 = ((b15 shl 37) or (b15 shr (64 - 37))) xor b14
    b0 += b9
    b9 = ((b9 shl 38) or (b9 shr (64 - 38))) xor b0
    b2 += b13
    b13 = ((b13 shl 19) or (b13 shr (64 - 19))) xor b2
    b6 += b11
    b11 = ((b11 shl 10) or (b11 shr (64 - 10))) xor b6
    b4 += b15
    b15 = ((b15 shl 55) or (b15 shr (64 - 55))) xor b4
    b10 += b7
    b7 = ((b7 shl 49) or (b7 shr (64 - 49))) xor b10
    b12 += b3
    b3 = ((b3 shl 18) or (b3 shr (64 - 18))) xor b12
    b14 += b5
    b5 = ((b5 shl 23) or (b5 shr (64 - 23))) xor b14
    b8 += b1
    b1 = ((b1 shl 52) or (b1 shr (64 - 52))) xor b8
    b0 += b7
    b7 = ((b7 shl 33) or (b7 shr (64 - 33))) xor b0
    b2 += b5
    b5 = ((b5 shl 4) or (b5 shr (64 - 4))) xor b2
    b4 += b3
    b3 = ((b3 shl 51) or (b3 shr (64 - 51))) xor b4
    b6 += b1
    b1 = ((b1 shl 13) or (b1 shr (64 - 13))) xor b6
    b12 += b15
    b15 = ((b15 shl 34) or (b15 shr (64 - 34))) xor b12
    b14 += b13
    b13 = ((b13 shl 41) or (b13 shr (64 - 41))) xor b14
    b8 += b11
    b11 = ((b11 shl 59) or (b11 shr (64 - 59))) xor b8
    b10 += b9
    b9 = ((b9 shl 17) or (b9 shr (64 - 17))) xor b10
    b0 += b15
    b15 = ((b15 shl 5) or (b15 shr (64 - 5))) xor b0
    b2 += b11
    b11 = ((b11 shl 20) or (b11 shr (64 - 20))) xor b2
    b6 += b13
    b13 = ((b13 shl 48) or (b13 shr (64 - 48))) xor b6
    b4 += b9
    b9 = ((b9 shl 41) or (b9 shr (64 - 41))) xor b4
    b14 += b1
    b1 = ((b1 shl 47) or (b1 shr (64 - 47))) xor b14
    b8 += b5
    b5 = ((b5 shl 28) or (b5 shr (64 - 28))) xor b8
    b10 += b3
    b3 = ((b3 shl 16) or (b3 shr (64 - 16))) xor b10
    b12 += b7
    b7 = ((b7 shl 25) or (b7 shr (64 - 25))) xor b12
    b1 += k6
    b0 += b1 + k5
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b0
    b3 += k8
    b2 += b3 + k7
    b3 = ((b3 shl 9) or (b3 shr (64 - 9))) xor b2
    b5 += k10
    b4 += b5 + k9
    b5 = ((b5 shl 37) or (b5 shr (64 - 37))) xor b4
    b7 += k12
    b6 += b7 + k11
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b6
    b9 += k14
    b8 += b9 + k13
    b9 = ((b9 shl 12) or (b9 shr (64 - 12))) xor b8
    b11 += k16
    b10 += b11 + k15
    b11 = ((b11 shl 47) or (b11 shr (64 - 47))) xor b10
    b13 += k1 + t2
    b12 += b13 + k0
    b13 = ((b13 shl 44) or (b13 shr (64 - 44))) xor b12
    b15 += k3 + 5
    b14 += b15 + k2 + t0
    b15 = ((b15 shl 30) or (b15 shr (64 - 30))) xor b14
    b0 += b9
    b9 = ((b9 shl 16) or (b9 shr (64 - 16))) xor b0
    b2 += b13
    b13 = ((b13 shl 34) or (b13 shr (64 - 34))) xor b2
    b6 += b11
    b11 = ((b11 shl 56) or (b11 shr (64 - 56))) xor b6
    b4 += b15
    b15 = ((b15 shl 51) or (b15 shr (64 - 51))) xor b4
    b10 += b7
    b7 = ((b7 shl 4) or (b7 shr (64 - 4))) xor b10
    b12 += b3
    b3 = ((b3 shl 53) or (b3 shr (64 - 53))) xor b12
    b14 += b5
    b5 = ((b5 shl 42) or (b5 shr (64 - 42))) xor b14
    b8 += b1
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b8
    b0 += b7
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b0
    b2 += b5
    b5 = ((b5 shl 44) or (b5 shr (64 - 44))) xor b2
    b4 += b3
    b3 = ((b3 shl 47) or (b3 shr (64 - 47))) xor b4
    b6 += b1
    b1 = ((b1 shl 46) or (b1 shr (64 - 46))) xor b6
    b12 += b15
    b15 = ((b15 shl 19) or (b15 shr (64 - 19))) xor b12
    b14 += b13
    b13 = ((b13 shl 42) or (b13 shr (64 - 42))) xor b14
    b8 += b11
    b11 = ((b11 shl 44) or (b11 shr (64 - 44))) xor b8
    b10 += b9
    b9 = ((b9 shl 25) or (b9 shr (64 - 25))) xor b10
    b0 += b15
    b15 = ((b15 shl 9) or (b15 shr (64 - 9))) xor b0
    b2 += b11
    b11 = ((b11 shl 48) or (b11 shr (64 - 48))) xor b2
    b6 += b13
    b13 = ((b13 shl 35) or (b13 shr (64 - 35))) xor b6
    b4 += b9
    b9 = ((b9 shl 52) or (b9 shr (64 - 52))) xor b4
    b14 += b1
    b1 = ((b1 shl 23) or (b1 shr (64 - 23))) xor b14
    b8 += b5
    b5 = ((b5 shl 31) or (b5 shr (64 - 31))) xor b8
    b10 += b3
    b3 = ((b3 shl 37) or (b3 shr (64 - 37))) xor b10
    b12 += b7
    b7 = ((b7 shl 20) or (b7 shr (64 - 20))) xor b12
    b1 += k7
    b0 += b1 + k6
    b1 = ((b1 shl 24) or (b1 shr (64 - 24))) xor b0
    b3 += k9
    b2 += b3 + k8
    b3 = ((b3 shl 13) or (b3 shr (64 - 13))) xor b2
    b5 += k11
    b4 += b5 + k10
    b5 = ((b5 shl 8) or (b5 shr (64 - 8))) xor b4
    b7 += k13
    b6 += b7 + k12
    b7 = ((b7 shl 47) or (b7 shr (64 - 47))) xor b6
    b9 += k15
    b8 += b9 + k14
    b9 = ((b9 shl 8) or (b9 shr (64 - 8))) xor b8
    b11 += k0
    b10 += b11 + k16
    b11 = ((b11 shl 17) or (b11 shr (64 - 17))) xor b10
    b13 += k2 + t0
    b12 += b13 + k1
    b13 = ((b13 shl 22) or (b13 shr (64 - 22))) xor b12
    b15 += k4 + 6
    b14 += b15 + k3 + t1
    b15 = ((b15 shl 37) or (b15 shr (64 - 37))) xor b14
    b0 += b9
    b9 = ((b9 shl 38) or (b9 shr (64 - 38))) xor b0
    b2 += b13
    b13 = ((b13 shl 19) or (b13 shr (64 - 19))) xor b2
    b6 += b11
    b11 = ((b11 shl 10) or (b11 shr (64 - 10))) xor b6
    b4 += b15
    b15 = ((b15 shl 55) or (b15 shr (64 - 55))) xor b4
    b10 += b7
    b7 = ((b7 shl 49) or (b7 shr (64 - 49))) xor b10
    b12 += b3
    b3 = ((b3 shl 18) or (b3 shr (64 - 18))) xor b12
    b14 += b5
    b5 = ((b5 shl 23) or (b5 shr (64 - 23))) xor b14
    b8 += b1
    b1 = ((b1 shl 52) or (b1 shr (64 - 52))) xor b8
    b0 += b7
    b7 = ((b7 shl 33) or (b7 shr (64 - 33))) xor b0
    b2 += b5
    b5 = ((b5 shl 4) or (b5 shr (64 - 4))) xor b2
    b4 += b3
    b3 = ((b3 shl 51) or (b3 shr (64 - 51))) xor b4
    b6 += b1
    b1 = ((b1 shl 13) or (b1 shr (64 - 13))) xor b6
    b12 += b15
    b15 = ((b15 shl 34) or (b15 shr (64 - 34))) xor b12
    b14 += b13
    b13 = ((b13 shl 41) or (b13 shr (64 - 41))) xor b14
    b8 += b11
    b11 = ((b11 shl 59) or (b11 shr (64 - 59))) xor b8
    b10 += b9
    b9 = ((b9 shl 17) or (b9 shr (64 - 17))) xor b10
    b0 += b15
    b15 = ((b15 shl 5) or (b15 shr (64 - 5))) xor b0
    b2 += b11
    b11 = ((b11 shl 20) or (b11 shr (64 - 20))) xor b2
    b6 += b13
    b13 = ((b13 shl 48) or (b13 shr (64 - 48))) xor b6
    b4 += b9
    b9 = ((b9 shl 41) or (b9 shr (64 - 41))) xor b4
    b14 += b1
    b1 = ((b1 shl 47) or (b1 shr (64 - 47))) xor b14
    b8 += b5
    b5 = ((b5 shl 28) or (b5 shr (64 - 28))) xor b8
    b10 += b3
    b3 = ((b3 shl 16) or (b3 shr (64 - 16))) xor b10
    b12 += b7
    b7 = ((b7 shl 25) or (b7 shr (64 - 25))) xor b12
    b1 += k8
    b0 += b1 + k7
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b0
    b3 += k10
    b2 += b3 + k9
    b3 = ((b3 shl 9) or (b3 shr (64 - 9))) xor b2
    b5 += k12
    b4 += b5 + k11
    b5 = ((b5 shl 37) or (b5 shr (64 - 37))) xor b4
    b7 += k14
    b6 += b7 + k13
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b6
    b9 += k16
    b8 += b9 + k15
    b9 = ((b9 shl 12) or (b9 shr (64 - 12))) xor b8
    b11 += k1
    b10 += b11 + k0
    b11 = ((b11 shl 47) or (b11 shr (64 - 47))) xor b10
    b13 += k3 + t1
    b12 += b13 + k2
    b13 = ((b13 shl 44) or (b13 shr (64 - 44))) xor b12
    b15 += k5 + 7
    b14 += b15 + k4 + t2
    b15 = ((b15 shl 30) or (b15 shr (64 - 30))) xor b14
    b0 += b9
    b9 = ((b9 shl 16) or (b9 shr (64 - 16))) xor b0
    b2 += b13
    b13 = ((b13 shl 34) or (b13 shr (64 - 34))) xor b2
    b6 += b11
    b11 = ((b11 shl 56) or (b11 shr (64 - 56))) xor b6
    b4 += b15
    b15 = ((b15 shl 51) or (b15 shr (64 - 51))) xor b4
    b10 += b7
    b7 = ((b7 shl 4) or (b7 shr (64 - 4))) xor b10
    b12 += b3
    b3 = ((b3 shl 53) or (b3 shr (64 - 53))) xor b12
    b14 += b5
    b5 = ((b5 shl 42) or (b5 shr (64 - 42))) xor b14
    b8 += b1
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b8
    b0 += b7
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b0
    b2 += b5
    b5 = ((b5 shl 44) or (b5 shr (64 - 44))) xor b2
    b4 += b3
    b3 = ((b3 shl 47) or (b3 shr (64 - 47))) xor b4
    b6 += b1
    b1 = ((b1 shl 46) or (b1 shr (64 - 46))) xor b6
    b12 += b15
    b15 = ((b15 shl 19) or (b15 shr (64 - 19))) xor b12
    b14 += b13
    b13 = ((b13 shl 42) or (b13 shr (64 - 42))) xor b14
    b8 += b11
    b11 = ((b11 shl 44) or (b11 shr (64 - 44))) xor b8
    b10 += b9
    b9 = ((b9 shl 25) or (b9 shr (64 - 25))) xor b10
    b0 += b15
    b15 = ((b15 shl 9) or (b15 shr (64 - 9))) xor b0
    b2 += b11
    b11 = ((b11 shl 48) or (b11 shr (64 - 48))) xor b2
    b6 += b13
    b13 = ((b13 shl 35) or (b13 shr (64 - 35))) xor b6
    b4 += b9
    b9 = ((b9 shl 52) or (b9 shr (64 - 52))) xor b4
    b14 += b1
    b1 = ((b1 shl 23) or (b1 shr (64 - 23))) xor b14
    b8 += b5
    b5 = ((b5 shl 31) or (b5 shr (64 - 31))) xor b8
    b10 += b3
    b3 = ((b3 shl 37) or (b3 shr (64 - 37))) xor b10
    b12 += b7
    b7 = ((b7 shl 20) or (b7 shr (64 - 20))) xor b12
    b1 += k9
    b0 += b1 + k8
    b1 = ((b1 shl 24) or (b1 shr (64 - 24))) xor b0
    b3 += k11
    b2 += b3 + k10
    b3 = ((b3 shl 13) or (b3 shr (64 - 13))) xor b2
    b5 += k13
    b4 += b5 + k12
    b5 = ((b5 shl 8) or (b5 shr (64 - 8))) xor b4
    b7 += k15
    b6 += b7 + k14
    b7 = ((b7 shl 47) or (b7 shr (64 - 47))) xor b6
    b9 += k0
    b8 += b9 + k16
    b9 = ((b9 shl 8) or (b9 shr (64 - 8))) xor b8
    b11 += k2
    b10 += b11 + k1
    b11 = ((b11 shl 17) or (b11 shr (64 - 17))) xor b10
    b13 += k4 + t2
    b12 += b13 + k3
    b13 = ((b13 shl 22) or (b13 shr (64 - 22))) xor b12
    b15 += k6 + 8
    b14 += b15 + k5 + t0
    b15 = ((b15 shl 37) or (b15 shr (64 - 37))) xor b14
    b0 += b9
    b9 = ((b9 shl 38) or (b9 shr (64 - 38))) xor b0
    b2 += b13
    b13 = ((b13 shl 19) or (b13 shr (64 - 19))) xor b2
    b6 += b11
    b11 = ((b11 shl 10) or (b11 shr (64 - 10))) xor b6
    b4 += b15
    b15 = ((b15 shl 55) or (b15 shr (64 - 55))) xor b4
    b10 += b7
    b7 = ((b7 shl 49) or (b7 shr (64 - 49))) xor b10
    b12 += b3
    b3 = ((b3 shl 18) or (b3 shr (64 - 18))) xor b12
    b14 += b5
    b5 = ((b5 shl 23) or (b5 shr (64 - 23))) xor b14
    b8 += b1
    b1 = ((b1 shl 52) or (b1 shr (64 - 52))) xor b8
    b0 += b7
    b7 = ((b7 shl 33) or (b7 shr (64 - 33))) xor b0
    b2 += b5
    b5 = ((b5 shl 4) or (b5 shr (64 - 4))) xor b2
    b4 += b3
    b3 = ((b3 shl 51) or (b3 shr (64 - 51))) xor b4
    b6 += b1
    b1 = ((b1 shl 13) or (b1 shr (64 - 13))) xor b6
    b12 += b15
    b15 = ((b15 shl 34) or (b15 shr (64 - 34))) xor b12
    b14 += b13
    b13 = ((b13 shl 41) or (b13 shr (64 - 41))) xor b14
    b8 += b11
    b11 = ((b11 shl 59) or (b11 shr (64 - 59))) xor b8
    b10 += b9
    b9 = ((b9 shl 17) or (b9 shr (64 - 17))) xor b10
    b0 += b15
    b15 = ((b15 shl 5) or (b15 shr (64 - 5))) xor b0
    b2 += b11
    b11 = ((b11 shl 20) or (b11 shr (64 - 20))) xor b2
    b6 += b13
    b13 = ((b13 shl 48) or (b13 shr (64 - 48))) xor b6
    b4 += b9
    b9 = ((b9 shl 41) or (b9 shr (64 - 41))) xor b4
    b14 += b1
    b1 = ((b1 shl 47) or (b1 shr (64 - 47))) xor b14
    b8 += b5
    b5 = ((b5 shl 28) or (b5 shr (64 - 28))) xor b8
    b10 += b3
    b3 = ((b3 shl 16) or (b3 shr (64 - 16))) xor b10
    b12 += b7
    b7 = ((b7 shl 25) or (b7 shr (64 - 25))) xor b12
    b1 += k10
    b0 += b1 + k9
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b0
    b3 += k12
    b2 += b3 + k11
    b3 = ((b3 shl 9) or (b3 shr (64 - 9))) xor b2
    b5 += k14
    b4 += b5 + k13
    b5 = ((b5 shl 37) or (b5 shr (64 - 37))) xor b4
    b7 += k16
    b6 += b7 + k15
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b6
    b9 += k1
    b8 += b9 + k0
    b9 = ((b9 shl 12) or (b9 shr (64 - 12))) xor b8
    b11 += k3
    b10 += b11 + k2
    b11 = ((b11 shl 47) or (b11 shr (64 - 47))) xor b10
    b13 += k5 + t0
    b12 += b13 + k4
    b13 = ((b13 shl 44) or (b13 shr (64 - 44))) xor b12
    b15 += k7 + 9
    b14 += b15 + k6 + t1
    b15 = ((b15 shl 30) or (b15 shr (64 - 30))) xor b14
    b0 += b9
    b9 = ((b9 shl 16) or (b9 shr (64 - 16))) xor b0
    b2 += b13
    b13 = ((b13 shl 34) or (b13 shr (64 - 34))) xor b2
    b6 += b11
    b11 = ((b11 shl 56) or (b11 shr (64 - 56))) xor b6
    b4 += b15
    b15 = ((b15 shl 51) or (b15 shr (64 - 51))) xor b4
    b10 += b7
    b7 = ((b7 shl 4) or (b7 shr (64 - 4))) xor b10
    b12 += b3
    b3 = ((b3 shl 53) or (b3 shr (64 - 53))) xor b12
    b14 += b5
    b5 = ((b5 shl 42) or (b5 shr (64 - 42))) xor b14
    b8 += b1
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b8
    b0 += b7
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b0
    b2 += b5
    b5 = ((b5 shl 44) or (b5 shr (64 - 44))) xor b2
    b4 += b3
    b3 = ((b3 shl 47) or (b3 shr (64 - 47))) xor b4
    b6 += b1
    b1 = ((b1 shl 46) or (b1 shr (64 - 46))) xor b6
    b12 += b15
    b15 = ((b15 shl 19) or (b15 shr (64 - 19))) xor b12
    b14 += b13
    b13 = ((b13 shl 42) or (b13 shr (64 - 42))) xor b14
    b8 += b11
    b11 = ((b11 shl 44) or (b11 shr (64 - 44))) xor b8
    b10 += b9
    b9 = ((b9 shl 25) or (b9 shr (64 - 25))) xor b10
    b0 += b15
    b15 = ((b15 shl 9) or (b15 shr (64 - 9))) xor b0
    b2 += b11
    b11 = ((b11 shl 48) or (b11 shr (64 - 48))) xor b2
    b6 += b13
    b13 = ((b13 shl 35) or (b13 shr (64 - 35))) xor b6
    b4 += b9
    b9 = ((b9 shl 52) or (b9 shr (64 - 52))) xor b4
    b14 += b1
    b1 = ((b1 shl 23) or (b1 shr (64 - 23))) xor b14
    b8 += b5
    b5 = ((b5 shl 31) or (b5 shr (64 - 31))) xor b8
    b10 += b3
    b3 = ((b3 shl 37) or (b3 shr (64 - 37))) xor b10
    b12 += b7
    b7 = ((b7 shl 20) or (b7 shr (64 - 20))) xor b12
    b1 += k11
    b0 += b1 + k10
    b1 = ((b1 shl 24) or (b1 shr (64 - 24))) xor b0
    b3 += k13
    b2 += b3 + k12
    b3 = ((b3 shl 13) or (b3 shr (64 - 13))) xor b2
    b5 += k15
    b4 += b5 + k14
    b5 = ((b5 shl 8) or (b5 shr (64 - 8))) xor b4
    b7 += k0
    b6 += b7 + k16
    b7 = ((b7 shl 47) or (b7 shr (64 - 47))) xor b6
    b9 += k2
    b8 += b9 + k1
    b9 = ((b9 shl 8) or (b9 shr (64 - 8))) xor b8
    b11 += k4
    b10 += b11 + k3
    b11 = ((b11 shl 17) or (b11 shr (64 - 17))) xor b10
    b13 += k6 + t1
    b12 += b13 + k5
    b13 = ((b13 shl 22) or (b13 shr (64 - 22))) xor b12
    b15 += k8 + 10
    b14 += b15 + k7 + t2
    b15 = ((b15 shl 37) or (b15 shr (64 - 37))) xor b14
    b0 += b9
    b9 = ((b9 shl 38) or (b9 shr (64 - 38))) xor b0
    b2 += b13
    b13 = ((b13 shl 19) or (b13 shr (64 - 19))) xor b2
    b6 += b11
    b11 = ((b11 shl 10) or (b11 shr (64 - 10))) xor b6
    b4 += b15
    b15 = ((b15 shl 55) or (b15 shr (64 - 55))) xor b4
    b10 += b7
    b7 = ((b7 shl 49) or (b7 shr (64 - 49))) xor b10
    b12 += b3
    b3 = ((b3 shl 18) or (b3 shr (64 - 18))) xor b12
    b14 += b5
    b5 = ((b5 shl 23) or (b5 shr (64 - 23))) xor b14
    b8 += b1
    b1 = ((b1 shl 52) or (b1 shr (64 - 52))) xor b8
    b0 += b7
    b7 = ((b7 shl 33) or (b7 shr (64 - 33))) xor b0
    b2 += b5
    b5 = ((b5 shl 4) or (b5 shr (64 - 4))) xor b2
    b4 += b3
    b3 = ((b3 shl 51) or (b3 shr (64 - 51))) xor b4
    b6 += b1
    b1 = ((b1 shl 13) or (b1 shr (64 - 13))) xor b6
    b12 += b15
    b15 = ((b15 shl 34) or (b15 shr (64 - 34))) xor b12
    b14 += b13
    b13 = ((b13 shl 41) or (b13 shr (64 - 41))) xor b14
    b8 += b11
    b11 = ((b11 shl 59) or (b11 shr (64 - 59))) xor b8
    b10 += b9
    b9 = ((b9 shl 17) or (b9 shr (64 - 17))) xor b10
    b0 += b15
    b15 = ((b15 shl 5) or (b15 shr (64 - 5))) xor b0
    b2 += b11
    b11 = ((b11 shl 20) or (b11 shr (64 - 20))) xor b2
    b6 += b13
    b13 = ((b13 shl 48) or (b13 shr (64 - 48))) xor b6
    b4 += b9
    b9 = ((b9 shl 41) or (b9 shr (64 - 41))) xor b4
    b14 += b1
    b1 = ((b1 shl 47) or (b1 shr (64 - 47))) xor b14
    b8 += b5
    b5 = ((b5 shl 28) or (b5 shr (64 - 28))) xor b8
    b10 += b3
    b3 = ((b3 shl 16) or (b3 shr (64 - 16))) xor b10
    b12 += b7
    b7 = ((b7 shl 25) or (b7 shr (64 - 25))) xor b12
    b1 += k12
    b0 += b1 + k11
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b0
    b3 += k14
    b2 += b3 + k13
    b3 = ((b3 shl 9) or (b3 shr (64 - 9))) xor b2
    b5 += k16
    b4 += b5 + k15
    b5 = ((b5 shl 37) or (b5 shr (64 - 37))) xor b4
    b7 += k1
    b6 += b7 + k0
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b6
    b9 += k3
    b8 += b9 + k2
    b9 = ((b9 shl 12) or (b9 shr (64 - 12))) xor b8
    b11 += k5
    b10 += b11 + k4
    b11 = ((b11 shl 47) or (b11 shr (64 - 47))) xor b10
    b13 += k7 + t2
    b12 += b13 + k6
    b13 = ((b13 shl 44) or (b13 shr (64 - 44))) xor b12
    b15 += k9 + 11
    b14 += b15 + k8 + t0
    b15 = ((b15 shl 30) or (b15 shr (64 - 30))) xor b14
    b0 += b9
    b9 = ((b9 shl 16) or (b9 shr (64 - 16))) xor b0
    b2 += b13
    b13 = ((b13 shl 34) or (b13 shr (64 - 34))) xor b2
    b6 += b11
    b11 = ((b11 shl 56) or (b11 shr (64 - 56))) xor b6
    b4 += b15
    b15 = ((b15 shl 51) or (b15 shr (64 - 51))) xor b4
    b10 += b7
    b7 = ((b7 shl 4) or (b7 shr (64 - 4))) xor b10
    b12 += b3
    b3 = ((b3 shl 53) or (b3 shr (64 - 53))) xor b12
    b14 += b5
    b5 = ((b5 shl 42) or (b5 shr (64 - 42))) xor b14
    b8 += b1
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b8
    b0 += b7
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b0
    b2 += b5
    b5 = ((b5 shl 44) or (b5 shr (64 - 44))) xor b2
    b4 += b3
    b3 = ((b3 shl 47) or (b3 shr (64 - 47))) xor b4
    b6 += b1
    b1 = ((b1 shl 46) or (b1 shr (64 - 46))) xor b6
    b12 += b15
    b15 = ((b15 shl 19) or (b15 shr (64 - 19))) xor b12
    b14 += b13
    b13 = ((b13 shl 42) or (b13 shr (64 - 42))) xor b14
    b8 += b11
    b11 = ((b11 shl 44) or (b11 shr (64 - 44))) xor b8
    b10 += b9
    b9 = ((b9 shl 25) or (b9 shr (64 - 25))) xor b10
    b0 += b15
    b15 = ((b15 shl 9) or (b15 shr (64 - 9))) xor b0
    b2 += b11
    b11 = ((b11 shl 48) or (b11 shr (64 - 48))) xor b2
    b6 += b13
    b13 = ((b13 shl 35) or (b13 shr (64 - 35))) xor b6
    b4 += b9
    b9 = ((b9 shl 52) or (b9 shr (64 - 52))) xor b4
    b14 += b1
    b1 = ((b1 shl 23) or (b1 shr (64 - 23))) xor b14
    b8 += b5
    b5 = ((b5 shl 31) or (b5 shr (64 - 31))) xor b8
    b10 += b3
    b3 = ((b3 shl 37) or (b3 shr (64 - 37))) xor b10
    b12 += b7
    b7 = ((b7 shl 20) or (b7 shr (64 - 20))) xor b12
    b1 += k13
    b0 += b1 + k12
    b1 = ((b1 shl 24) or (b1 shr (64 - 24))) xor b0
    b3 += k15
    b2 += b3 + k14
    b3 = ((b3 shl 13) or (b3 shr (64 - 13))) xor b2
    b5 += k0
    b4 += b5 + k16
    b5 = ((b5 shl 8) or (b5 shr (64 - 8))) xor b4
    b7 += k2
    b6 += b7 + k1
    b7 = ((b7 shl 47) or (b7 shr (64 - 47))) xor b6
    b9 += k4
    b8 += b9 + k3
    b9 = ((b9 shl 8) or (b9 shr (64 - 8))) xor b8
    b11 += k6
    b10 += b11 + k5
    b11 = ((b11 shl 17) or (b11 shr (64 - 17))) xor b10
    b13 += k8 + t0
    b12 += b13 + k7
    b13 = ((b13 shl 22) or (b13 shr (64 - 22))) xor b12
    b15 += k10 + 12
    b14 += b15 + k9 + t1
    b15 = ((b15 shl 37) or (b15 shr (64 - 37))) xor b14
    b0 += b9
    b9 = ((b9 shl 38) or (b9 shr (64 - 38))) xor b0
    b2 += b13
    b13 = ((b13 shl 19) or (b13 shr (64 - 19))) xor b2
    b6 += b11
    b11 = ((b11 shl 10) or (b11 shr (64 - 10))) xor b6
    b4 += b15
    b15 = ((b15 shl 55) or (b15 shr (64 - 55))) xor b4
    b10 += b7
    b7 = ((b7 shl 49) or (b7 shr (64 - 49))) xor b10
    b12 += b3
    b3 = ((b3 shl 18) or (b3 shr (64 - 18))) xor b12
    b14 += b5
    b5 = ((b5 shl 23) or (b5 shr (64 - 23))) xor b14
    b8 += b1
    b1 = ((b1 shl 52) or (b1 shr (64 - 52))) xor b8
    b0 += b7
    b7 = ((b7 shl 33) or (b7 shr (64 - 33))) xor b0
    b2 += b5
    b5 = ((b5 shl 4) or (b5 shr (64 - 4))) xor b2
    b4 += b3
    b3 = ((b3 shl 51) or (b3 shr (64 - 51))) xor b4
    b6 += b1
    b1 = ((b1 shl 13) or (b1 shr (64 - 13))) xor b6
    b12 += b15
    b15 = ((b15 shl 34) or (b15 shr (64 - 34))) xor b12
    b14 += b13
    b13 = ((b13 shl 41) or (b13 shr (64 - 41))) xor b14
    b8 += b11
    b11 = ((b11 shl 59) or (b11 shr (64 - 59))) xor b8
    b10 += b9
    b9 = ((b9 shl 17) or (b9 shr (64 - 17))) xor b10
    b0 += b15
    b15 = ((b15 shl 5) or (b15 shr (64 - 5))) xor b0
    b2 += b11
    b11 = ((b11 shl 20) or (b11 shr (64 - 20))) xor b2
    b6 += b13
    b13 = ((b13 shl 48) or (b13 shr (64 - 48))) xor b6
    b4 += b9
    b9 = ((b9 shl 41) or (b9 shr (64 - 41))) xor b4
    b14 += b1
    b1 = ((b1 shl 47) or (b1 shr (64 - 47))) xor b14
    b8 += b5
    b5 = ((b5 shl 28) or (b5 shr (64 - 28))) xor b8
    b10 += b3
    b3 = ((b3 shl 16) or (b3 shr (64 - 16))) xor b10
    b12 += b7
    b7 = ((b7 shl 25) or (b7 shr (64 - 25))) xor b12
    b1 += k14
    b0 += b1 + k13
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b0
    b3 += k16
    b2 += b3 + k15
    b3 = ((b3 shl 9) or (b3 shr (64 - 9))) xor b2
    b5 += k1
    b4 += b5 + k0
    b5 = ((b5 shl 37) or (b5 shr (64 - 37))) xor b4
    b7 += k3
    b6 += b7 + k2
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b6
    b9 += k5
    b8 += b9 + k4
    b9 = ((b9 shl 12) or (b9 shr (64 - 12))) xor b8
    b11 += k7
    b10 += b11 + k6
    b11 = ((b11 shl 47) or (b11 shr (64 - 47))) xor b10
    b13 += k9 + t1
    b12 += b13 + k8
    b13 = ((b13 shl 44) or (b13 shr (64 - 44))) xor b12
    b15 += k11 + 13
    b14 += b15 + k10 + t2
    b15 = ((b15 shl 30) or (b15 shr (64 - 30))) xor b14
    b0 += b9
    b9 = ((b9 shl 16) or (b9 shr (64 - 16))) xor b0
    b2 += b13
    b13 = ((b13 shl 34) or (b13 shr (64 - 34))) xor b2
    b6 += b11
    b11 = ((b11 shl 56) or (b11 shr (64 - 56))) xor b6
    b4 += b15
    b15 = ((b15 shl 51) or (b15 shr (64 - 51))) xor b4
    b10 += b7
    b7 = ((b7 shl 4) or (b7 shr (64 - 4))) xor b10
    b12 += b3
    b3 = ((b3 shl 53) or (b3 shr (64 - 53))) xor b12
    b14 += b5
    b5 = ((b5 shl 42) or (b5 shr (64 - 42))) xor b14
    b8 += b1
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b8
    b0 += b7
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b0
    b2 += b5
    b5 = ((b5 shl 44) or (b5 shr (64 - 44))) xor b2
    b4 += b3
    b3 = ((b3 shl 47) or (b3 shr (64 - 47))) xor b4
    b6 += b1
    b1 = ((b1 shl 46) or (b1 shr (64 - 46))) xor b6
    b12 += b15
    b15 = ((b15 shl 19) or (b15 shr (64 - 19))) xor b12
    b14 += b13
    b13 = ((b13 shl 42) or (b13 shr (64 - 42))) xor b14
    b8 += b11
    b11 = ((b11 shl 44) or (b11 shr (64 - 44))) xor b8
    b10 += b9
    b9 = ((b9 shl 25) or (b9 shr (64 - 25))) xor b10
    b0 += b15
    b15 = ((b15 shl 9) or (b15 shr (64 - 9))) xor b0
    b2 += b11
    b11 = ((b11 shl 48) or (b11 shr (64 - 48))) xor b2
    b6 += b13
    b13 = ((b13 shl 35) or (b13 shr (64 - 35))) xor b6
    b4 += b9
    b9 = ((b9 shl 52) or (b9 shr (64 - 52))) xor b4
    b14 += b1
    b1 = ((b1 shl 23) or (b1 shr (64 - 23))) xor b14
    b8 += b5
    b5 = ((b5 shl 31) or (b5 shr (64 - 31))) xor b8
    b10 += b3
    b3 = ((b3 shl 37) or (b3 shr (64 - 37))) xor b10
    b12 += b7
    b7 = ((b7 shl 20) or (b7 shr (64 - 20))) xor b12
    b1 += k15
    b0 += b1 + k14
    b1 = ((b1 shl 24) or (b1 shr (64 - 24))) xor b0
    b3 += k0
    b2 += b3 + k16
    b3 = ((b3 shl 13) or (b3 shr (64 - 13))) xor b2
    b5 += k2
    b4 += b5 + k1
    b5 = ((b5 shl 8) or (b5 shr (64 - 8))) xor b4
    b7 += k4
    b6 += b7 + k3
    b7 = ((b7 shl 47) or (b7 shr (64 - 47))) xor b6
    b9 += k6
    b8 += b9 + k5
    b9 = ((b9 shl 8) or (b9 shr (64 - 8))) xor b8
    b11 += k8
    b10 += b11 + k7
    b11 = ((b11 shl 17) or (b11 shr (64 - 17))) xor b10
    b13 += k10 + t2
    b12 += b13 + k9
    b13 = ((b13 shl 22) or (b13 shr (64 - 22))) xor b12
    b15 += k12 + 14
    b14 += b15 + k11 + t0
    b15 = ((b15 shl 37) or (b15 shr (64 - 37))) xor b14
    b0 += b9
    b9 = ((b9 shl 38) or (b9 shr (64 - 38))) xor b0
    b2 += b13
    b13 = ((b13 shl 19) or (b13 shr (64 - 19))) xor b2
    b6 += b11
    b11 = ((b11 shl 10) or (b11 shr (64 - 10))) xor b6
    b4 += b15
    b15 = ((b15 shl 55) or (b15 shr (64 - 55))) xor b4
    b10 += b7
    b7 = ((b7 shl 49) or (b7 shr (64 - 49))) xor b10
    b12 += b3
    b3 = ((b3 shl 18) or (b3 shr (64 - 18))) xor b12
    b14 += b5
    b5 = ((b5 shl 23) or (b5 shr (64 - 23))) xor b14
    b8 += b1
    b1 = ((b1 shl 52) or (b1 shr (64 - 52))) xor b8
    b0 += b7
    b7 = ((b7 shl 33) or (b7 shr (64 - 33))) xor b0
    b2 += b5
    b5 = ((b5 shl 4) or (b5 shr (64 - 4))) xor b2
    b4 += b3
    b3 = ((b3 shl 51) or (b3 shr (64 - 51))) xor b4
    b6 += b1
    b1 = ((b1 shl 13) or (b1 shr (64 - 13))) xor b6
    b12 += b15
    b15 = ((b15 shl 34) or (b15 shr (64 - 34))) xor b12
    b14 += b13
    b13 = ((b13 shl 41) or (b13 shr (64 - 41))) xor b14
    b8 += b11
    b11 = ((b11 shl 59) or (b11 shr (64 - 59))) xor b8
    b10 += b9
    b9 = ((b9 shl 17) or (b9 shr (64 - 17))) xor b10
    b0 += b15
    b15 = ((b15 shl 5) or (b15 shr (64 - 5))) xor b0
    b2 += b11
    b11 = ((b11 shl 20) or (b11 shr (64 - 20))) xor b2
    b6 += b13
    b13 = ((b13 shl 48) or (b13 shr (64 - 48))) xor b6
    b4 += b9
    b9 = ((b9 shl 41) or (b9 shr (64 - 41))) xor b4
    b14 += b1
    b1 = ((b1 shl 47) or (b1 shr (64 - 47))) xor b14
    b8 += b5
    b5 = ((b5 shl 28) or (b5 shr (64 - 28))) xor b8
    b10 += b3
    b3 = ((b3 shl 16) or (b3 shr (64 - 16))) xor b10
    b12 += b7
    b7 = ((b7 shl 25) or (b7 shr (64 - 25))) xor b12
    b1 += k16
    b0 += b1 + k15
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b0
    b3 += k1
    b2 += b3 + k0
    b3 = ((b3 shl 9) or (b3 shr (64 - 9))) xor b2
    b5 += k3
    b4 += b5 + k2
    b5 = ((b5 shl 37) or (b5 shr (64 - 37))) xor b4
    b7 += k5
    b6 += b7 + k4
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b6
    b9 += k7
    b8 += b9 + k6
    b9 = ((b9 shl 12) or (b9 shr (64 - 12))) xor b8
    b11 += k9
    b10 += b11 + k8
    b11 = ((b11 shl 47) or (b11 shr (64 - 47))) xor b10
    b13 += k11 + t0
    b12 += b13 + k10
    b13 = ((b13 shl 44) or (b13 shr (64 - 44))) xor b12
    b15 += k13 + 15
    b14 += b15 + k12 + t1
    b15 = ((b15 shl 30) or (b15 shr (64 - 30))) xor b14
    b0 += b9
    b9 = ((b9 shl 16) or (b9 shr (64 - 16))) xor b0
    b2 += b13
    b13 = ((b13 shl 34) or (b13 shr (64 - 34))) xor b2
    b6 += b11
    b11 = ((b11 shl 56) or (b11 shr (64 - 56))) xor b6
    b4 += b15
    b15 = ((b15 shl 51) or (b15 shr (64 - 51))) xor b4
    b10 += b7
    b7 = ((b7 shl 4) or (b7 shr (64 - 4))) xor b10
    b12 += b3
    b3 = ((b3 shl 53) or (b3 shr (64 - 53))) xor b12
    b14 += b5
    b5 = ((b5 shl 42) or (b5 shr (64 - 42))) xor b14
    b8 += b1
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b8
    b0 += b7
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b0
    b2 += b5
    b5 = ((b5 shl 44) or (b5 shr (64 - 44))) xor b2
    b4 += b3
    b3 = ((b3 shl 47) or (b3 shr (64 - 47))) xor b4
    b6 += b1
    b1 = ((b1 shl 46) or (b1 shr (64 - 46))) xor b6
    b12 += b15
    b15 = ((b15 shl 19) or (b15 shr (64 - 19))) xor b12
    b14 += b13
    b13 = ((b13 shl 42) or (b13 shr (64 - 42))) xor b14
    b8 += b11
    b11 = ((b11 shl 44) or (b11 shr (64 - 44))) xor b8
    b10 += b9
    b9 = ((b9 shl 25) or (b9 shr (64 - 25))) xor b10
    b0 += b15
    b15 = ((b15 shl 9) or (b15 shr (64 - 9))) xor b0
    b2 += b11
    b11 = ((b11 shl 48) or (b11 shr (64 - 48))) xor b2
    b6 += b13
    b13 = ((b13 shl 35) or (b13 shr (64 - 35))) xor b6
    b4 += b9
    b9 = ((b9 shl 52) or (b9 shr (64 - 52))) xor b4
    b14 += b1
    b1 = ((b1 shl 23) or (b1 shr (64 - 23))) xor b14
    b8 += b5
    b5 = ((b5 shl 31) or (b5 shr (64 - 31))) xor b8
    b10 += b3
    b3 = ((b3 shl 37) or (b3 shr (64 - 37))) xor b10
    b12 += b7
    b7 = ((b7 shl 20) or (b7 shr (64 - 20))) xor b12
    b1 += k0
    b0 += b1 + k16
    b1 = ((b1 shl 24) or (b1 shr (64 - 24))) xor b0
    b3 += k2
    b2 += b3 + k1
    b3 = ((b3 shl 13) or (b3 shr (64 - 13))) xor b2
    b5 += k4
    b4 += b5 + k3
    b5 = ((b5 shl 8) or (b5 shr (64 - 8))) xor b4
    b7 += k6
    b6 += b7 + k5
    b7 = ((b7 shl 47) or (b7 shr (64 - 47))) xor b6
    b9 += k8
    b8 += b9 + k7
    b9 = ((b9 shl 8) or (b9 shr (64 - 8))) xor b8
    b11 += k10
    b10 += b11 + k9
    b11 = ((b11 shl 17) or (b11 shr (64 - 17))) xor b10
    b13 += k12 + t1
    b12 += b13 + k11
    b13 = ((b13 shl 22) or (b13 shr (64 - 22))) xor b12
    b15 += k14 + 16
    b14 += b15 + k13 + t2
    b15 = ((b15 shl 37) or (b15 shr (64 - 37))) xor b14
    b0 += b9
    b9 = ((b9 shl 38) or (b9 shr (64 - 38))) xor b0
    b2 += b13
    b13 = ((b13 shl 19) or (b13 shr (64 - 19))) xor b2
    b6 += b11
    b11 = ((b11 shl 10) or (b11 shr (64 - 10))) xor b6
    b4 += b15
    b15 = ((b15 shl 55) or (b15 shr (64 - 55))) xor b4
    b10 += b7
    b7 = ((b7 shl 49) or (b7 shr (64 - 49))) xor b10
    b12 += b3
    b3 = ((b3 shl 18) or (b3 shr (64 - 18))) xor b12
    b14 += b5
    b5 = ((b5 shl 23) or (b5 shr (64 - 23))) xor b14
    b8 += b1
    b1 = ((b1 shl 52) or (b1 shr (64 - 52))) xor b8
    b0 += b7
    b7 = ((b7 shl 33) or (b7 shr (64 - 33))) xor b0
    b2 += b5
    b5 = ((b5 shl 4) or (b5 shr (64 - 4))) xor b2
    b4 += b3
    b3 = ((b3 shl 51) or (b3 shr (64 - 51))) xor b4
    b6 += b1
    b1 = ((b1 shl 13) or (b1 shr (64 - 13))) xor b6
    b12 += b15
    b15 = ((b15 shl 34) or (b15 shr (64 - 34))) xor b12
    b14 += b13
    b13 = ((b13 shl 41) or (b13 shr (64 - 41))) xor b14
    b8 += b11
    b11 = ((b11 shl 59) or (b11 shr (64 - 59))) xor b8
    b10 += b9
    b9 = ((b9 shl 17) or (b9 shr (64 - 17))) xor b10
    b0 += b15
    b15 = ((b15 shl 5) or (b15 shr (64 - 5))) xor b0
    b2 += b11
    b11 = ((b11 shl 20) or (b11 shr (64 - 20))) xor b2
    b6 += b13
    b13 = ((b13 shl 48) or (b13 shr (64 - 48))) xor b6
    b4 += b9
    b9 = ((b9 shl 41) or (b9 shr (64 - 41))) xor b4
    b14 += b1
    b1 = ((b1 shl 47) or (b1 shr (64 - 47))) xor b14
    b8 += b5
    b5 = ((b5 shl 28) or (b5 shr (64 - 28))) xor b8
    b10 += b3
    b3 = ((b3 shl 16) or (b3 shr (64 - 16))) xor b10
    b12 += b7
    b7 = ((b7 shl 25) or (b7 shr (64 - 25))) xor b12
    b1 += k1
    b0 += b1 + k0
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b0
    b3 += k3
    b2 += b3 + k2
    b3 = ((b3 shl 9) or (b3 shr (64 - 9))) xor b2
    b5 += k5
    b4 += b5 + k4
    b5 = ((b5 shl 37) or (b5 shr (64 - 37))) xor b4
    b7 += k7
    b6 += b7 + k6
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b6
    b9 += k9
    b8 += b9 + k8
    b9 = ((b9 shl 12) or (b9 shr (64 - 12))) xor b8
    b11 += k11
    b10 += b11 + k10
    b11 = ((b11 shl 47) or (b11 shr (64 - 47))) xor b10
    b13 += k13 + t2
    b12 += b13 + k12
    b13 = ((b13 shl 44) or (b13 shr (64 - 44))) xor b12
    b15 += k15 + 17
    b14 += b15 + k14 + t0
    b15 = ((b15 shl 30) or (b15 shr (64 - 30))) xor b14
    b0 += b9
    b9 = ((b9 shl 16) or (b9 shr (64 - 16))) xor b0
    b2 += b13
    b13 = ((b13 shl 34) or (b13 shr (64 - 34))) xor b2
    b6 += b11
    b11 = ((b11 shl 56) or (b11 shr (64 - 56))) xor b6
    b4 += b15
    b15 = ((b15 shl 51) or (b15 shr (64 - 51))) xor b4
    b10 += b7
    b7 = ((b7 shl 4) or (b7 shr (64 - 4))) xor b10
    b12 += b3
    b3 = ((b3 shl 53) or (b3 shr (64 - 53))) xor b12
    b14 += b5
    b5 = ((b5 shl 42) or (b5 shr (64 - 42))) xor b14
    b8 += b1
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b8
    b0 += b7
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b0
    b2 += b5
    b5 = ((b5 shl 44) or (b5 shr (64 - 44))) xor b2
    b4 += b3
    b3 = ((b3 shl 47) or (b3 shr (64 - 47))) xor b4
    b6 += b1
    b1 = ((b1 shl 46) or (b1 shr (64 - 46))) xor b6
    b12 += b15
    b15 = ((b15 shl 19) or (b15 shr (64 - 19))) xor b12
    b14 += b13
    b13 = ((b13 shl 42) or (b13 shr (64 - 42))) xor b14
    b8 += b11
    b11 = ((b11 shl 44) or (b11 shr (64 - 44))) xor b8
    b10 += b9
    b9 = ((b9 shl 25) or (b9 shr (64 - 25))) xor b10
    b0 += b15
    b15 = ((b15 shl 9) or (b15 shr (64 - 9))) xor b0
    b2 += b11
    b11 = ((b11 shl 48) or (b11 shr (64 - 48))) xor b2
    b6 += b13
    b13 = ((b13 shl 35) or (b13 shr (64 - 35))) xor b6
    b4 += b9
    b9 = ((b9 shl 52) or (b9 shr (64 - 52))) xor b4
    b14 += b1
    b1 = ((b1 shl 23) or (b1 shr (64 - 23))) xor b14
    b8 += b5
    b5 = ((b5 shl 31) or (b5 shr (64 - 31))) xor b8
    b10 += b3
    b3 = ((b3 shl 37) or (b3 shr (64 - 37))) xor b10
    b12 += b7
    b7 = ((b7 shl 20) or (b7 shr (64 - 20))) xor b12
    b1 += k2
    b0 += b1 + k1
    b1 = ((b1 shl 24) or (b1 shr (64 - 24))) xor b0
    b3 += k4
    b2 += b3 + k3
    b3 = ((b3 shl 13) or (b3 shr (64 - 13))) xor b2
    b5 += k6
    b4 += b5 + k5
    b5 = ((b5 shl 8) or (b5 shr (64 - 8))) xor b4
    b7 += k8
    b6 += b7 + k7
    b7 = ((b7 shl 47) or (b7 shr (64 - 47))) xor b6
    b9 += k10
    b8 += b9 + k9
    b9 = ((b9 shl 8) or (b9 shr (64 - 8))) xor b8
    b11 += k12
    b10 += b11 + k11
    b11 = ((b11 shl 17) or (b11 shr (64 - 17))) xor b10
    b13 += k14 + t0
    b12 += b13 + k13
    b13 = ((b13 shl 22) or (b13 shr (64 - 22))) xor b12
    b15 += k16 + 18
    b14 += b15 + k15 + t1
    b15 = ((b15 shl 37) or (b15 shr (64 - 37))) xor b14
    b0 += b9
    b9 = ((b9 shl 38) or (b9 shr (64 - 38))) xor b0
    b2 += b13
    b13 = ((b13 shl 19) or (b13 shr (64 - 19))) xor b2
    b6 += b11
    b11 = ((b11 shl 10) or (b11 shr (64 - 10))) xor b6
    b4 += b15
    b15 = ((b15 shl 55) or (b15 shr (64 - 55))) xor b4
    b10 += b7
    b7 = ((b7 shl 49) or (b7 shr (64 - 49))) xor b10
    b12 += b3
    b3 = ((b3 shl 18) or (b3 shr (64 - 18))) xor b12
    b14 += b5
    b5 = ((b5 shl 23) or (b5 shr (64 - 23))) xor b14
    b8 += b1
    b1 = ((b1 shl 52) or (b1 shr (64 - 52))) xor b8
    b0 += b7
    b7 = ((b7 shl 33) or (b7 shr (64 - 33))) xor b0
    b2 += b5
    b5 = ((b5 shl 4) or (b5 shr (64 - 4))) xor b2
    b4 += b3
    b3 = ((b3 shl 51) or (b3 shr (64 - 51))) xor b4
    b6 += b1
    b1 = ((b1 shl 13) or (b1 shr (64 - 13))) xor b6
    b12 += b15
    b15 = ((b15 shl 34) or (b15 shr (64 - 34))) xor b12
    b14 += b13
    b13 = ((b13 shl 41) or (b13 shr (64 - 41))) xor b14
    b8 += b11
    b11 = ((b11 shl 59) or (b11 shr (64 - 59))) xor b8
    b10 += b9
    b9 = ((b9 shl 17) or (b9 shr (64 - 17))) xor b10
    b0 += b15
    b15 = ((b15 shl 5) or (b15 shr (64 - 5))) xor b0
    b2 += b11
    b11 = ((b11 shl 20) or (b11 shr (64 - 20))) xor b2
    b6 += b13
    b13 = ((b13 shl 48) or (b13 shr (64 - 48))) xor b6
    b4 += b9
    b9 = ((b9 shl 41) or (b9 shr (64 - 41))) xor b4
    b14 += b1
    b1 = ((b1 shl 47) or (b1 shr (64 - 47))) xor b14
    b8 += b5
    b5 = ((b5 shl 28) or (b5 shr (64 - 28))) xor b8
    b10 += b3
    b3 = ((b3 shl 16) or (b3 shr (64 - 16))) xor b10
    b12 += b7
    b7 = ((b7 shl 25) or (b7 shr (64 - 25))) xor b12
    b1 += k3
    b0 += b1 + k2
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b0
    b3 += k5
    b2 += b3 + k4
    b3 = ((b3 shl 9) or (b3 shr (64 - 9))) xor b2
    b5 += k7
    b4 += b5 + k6
    b5 = ((b5 shl 37) or (b5 shr (64 - 37))) xor b4
    b7 += k9
    b6 += b7 + k8
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b6
    b9 += k11
    b8 += b9 + k10
    b9 = ((b9 shl 12) or (b9 shr (64 - 12))) xor b8
    b11 += k13
    b10 += b11 + k12
    b11 = ((b11 shl 47) or (b11 shr (64 - 47))) xor b10
    b13 += k15 + t1
    b12 += b13 + k14
    b13 = ((b13 shl 44) or (b13 shr (64 - 44))) xor b12
    b15 += k0 + 19
    b14 += b15 + k16 + t2
    b15 = ((b15 shl 30) or (b15 shr (64 - 30))) xor b14
    b0 += b9
    b9 = ((b9 shl 16) or (b9 shr (64 - 16))) xor b0
    b2 += b13
    b13 = ((b13 shl 34) or (b13 shr (64 - 34))) xor b2
    b6 += b11
    b11 = ((b11 shl 56) or (b11 shr (64 - 56))) xor b6
    b4 += b15
    b15 = ((b15 shl 51) or (b15 shr (64 - 51))) xor b4
    b10 += b7
    b7 = ((b7 shl 4) or (b7 shr (64 - 4))) xor b10
    b12 += b3
    b3 = ((b3 shl 53) or (b3 shr (64 - 53))) xor b12
    b14 += b5
    b5 = ((b5 shl 42) or (b5 shr (64 - 42))) xor b14
    b8 += b1
    b1 = ((b1 shl 41) or (b1 shr (64 - 41))) xor b8
    b0 += b7
    b7 = ((b7 shl 31) or (b7 shr (64 - 31))) xor b0
    b2 += b5
    b5 = ((b5 shl 44) or (b5 shr (64 - 44))) xor b2
    b4 += b3
    b3 = ((b3 shl 47) or (b3 shr (64 - 47))) xor b4
    b6 += b1
    b1 = ((b1 shl 46) or (b1 shr (64 - 46))) xor b6
    b12 += b15
    b15 = ((b15 shl 19) or (b15 shr (64 - 19))) xor b12
    b14 += b13
    b13 = ((b13 shl 42) or (b13 shr (64 - 42))) xor b14
    b8 += b11
    b11 = ((b11 shl 44) or (b11 shr (64 - 44))) xor b8
    b10 += b9
    b9 = ((b9 shl 25) or (b9 shr (64 - 25))) xor b10
    b0 += b15
    b15 = ((b15 shl 9) or (b15 shr (64 - 9))) xor b0
    b2 += b11
    b11 = ((b11 shl 48) or (b11 shr (64 - 48))) xor b2
    b6 += b13
    b13 = ((b13 shl 35) or (b13 shr (64 - 35))) xor b6
    b4 += b9
    b9 = ((b9 shl 52) or (b9 shr (64 - 52))) xor b4
    b14 += b1
    b1 = ((b1 shl 23) or (b1 shr (64 - 23))) xor b14
    b8 += b5
    b5 = ((b5 shl 31) or (b5 shr (64 - 31))) xor b8
    b10 += b3
    b3 = ((b3 shl 37) or (b3 shr (64 - 37))) xor b10
    b12 += b7
    b7 = ((b7 shl 20) or (b7 shr (64 - 20))) xor b12


  output[0] = b0 + k3
  output[1] = b1 + k4
  output[2] = b2 + k5
  output[3] = b3 + k6
  output[4] = b4 + k7
  output[5] = b5 + k8
  output[6] = b6 + k9
  output[7] = b7 + k10
  output[8] = b8 + k11
  output[9] = b9 + k12
  output[10] = b10 + k13
  output[11] = b11 + k14
  output[12] = b12 + k15
  output[13] = b13 + k16 + t2
  output[14] = b14 + k0 + t0
  output[15] = b15 + k1 + 20

proc decrypt(c: Cipher, input: openarray[uint64], output: var openarray[uint64]) =
  var tf = Threefish1024(c)
  var
    b0 = input[0]
    b1 = input[1]
    b2 = input[2]
    b3 = input[3]
    b4 = input[4]
    b5 = input[5]
    b6 = input[6]
    b7 = input[7]
    b8 = input[8]
    b9 = input[9]
    b10 = input[10]
    b11 = input[11]
    b12 = input[12]
    b13 = input[13]
    b14 = input[14]
    b15 = input[15]

    k0 = tf.expandedKey[0]
    k1 = tf.expandedKey[1]
    k2 = tf.expandedKey[2]
    k3 = tf.expandedKey[3]
    k4 = tf.expandedKey[4]
    k5 = tf.expandedKey[5]
    k6 = tf.expandedKey[6]
    k7 = tf.expandedKey[7]

    k8 = tf.expandedKey[8]
    k9 = tf.expandedKey[9]
    k10 = tf.expandedKey[10]
    k11 = tf.expandedKey[11]
    k12 = tf.expandedKey[12]
    k13 = tf.expandedKey[13]
    k14 = tf.expandedKey[14]
    k15 = tf.expandedKey[15]
    k16 = tf.expandedKey[16]

    t0 = tf.expandedTweak[0]
    t1 = tf.expandedTweak[1]
    t2 = tf.expandedTweak[2]

  var tmp: uint64

  block decryption:
    b0 -= k3
    b1 -= k4
    b2 -= k5
    b3 -= k6
    b4 -= k7
    b5 -= k8
    b6 -= k9
    b7 -= k10
    b8 -= k11
    b9 -= k12
    b10 -= k13
    b11 -= k14
    b12 -= k15
    b13 -= k16 + t2
    b14 -= k0 + t0
    b15 -= k1 + 20
    tmp = b7 xor b12
    b7 = (tmp shr 20) or (tmp shl (64 - 20))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 37) or (tmp shl (64 - 37))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 31) or (tmp shl (64 - 31))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 52) or (tmp shl (64 - 52))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 35) or (tmp shl (64 - 35))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 48) or (tmp shl (64 - 48))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 9) or (tmp shl (64 - 9))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 25) or (tmp shl (64 - 25))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 44) or (tmp shl (64 - 44))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 19) or (tmp shl (64 - 19))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 46) or (tmp shl (64 - 46))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 47) or (tmp shl (64 - 47))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 44) or (tmp shl (64 - 44))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 53) or (tmp shl (64 - 53))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 4) or (tmp shl (64 - 4))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 56) or (tmp shl (64 - 56))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 34) or (tmp shl (64 - 34))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 16) or (tmp shl (64 - 16))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 30) or (tmp shl (64 - 30))
    b14 -= b15 + k16 + t2
    b15 -= k0 + 19
    tmp = b13 xor b12
    b13 = (tmp shr 44) or (tmp shl (64 - 44))
    b12 -= b13 + k14
    b13 -= k15 + t1
    tmp = b11 xor b10
    b11 = (tmp shr 47) or (tmp shl (64 - 47))
    b10 -= b11 + k12
    b11 -= k13
    tmp = b9 xor b8
    b9 = (tmp shr 12) or (tmp shl (64 - 12))
    b8 -= b9 + k10
    b9 -= k11
    tmp = b7 xor b6
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b6 -= b7 + k8
    b7 -= k9
    tmp = b5 xor b4
    b5 = (tmp shr 37) or (tmp shl (64 - 37))
    b4 -= b5 + k6
    b5 -= k7
    tmp = b3 xor b2
    b3 = (tmp shr 9) or (tmp shl (64 - 9))
    b2 -= b3 + k4
    b3 -= k5
    tmp = b1 xor b0
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b0 -= b1 + k2
    b1 -= k3
    tmp = b7 xor b12
    b7 = (tmp shr 25) or (tmp shl (64 - 25))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 16) or (tmp shl (64 - 16))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 28) or (tmp shl (64 - 28))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 47) or (tmp shl (64 - 47))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 41) or (tmp shl (64 - 41))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 48) or (tmp shl (64 - 48))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 20) or (tmp shl (64 - 20))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 5) or (tmp shl (64 - 5))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 59) or (tmp shl (64 - 59))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 41) or (tmp shl (64 - 41))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 34) or (tmp shl (64 - 34))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 13) or (tmp shl (64 - 13))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 4) or (tmp shl (64 - 4))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 33) or (tmp shl (64 - 33))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 52) or (tmp shl (64 - 52))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 18) or (tmp shl (64 - 18))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 49) or (tmp shl (64 - 49))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 55) or (tmp shl (64 - 55))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 10) or (tmp shl (64 - 10))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 19) or (tmp shl (64 - 19))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 38) or (tmp shl (64 - 38))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 37) or (tmp shl (64 - 37))
    b14 -= b15 + k15 + t1
    b15 -= k16 + 18
    tmp = b13 xor b12
    b13 = (tmp shr 22) or (tmp shl (64 - 22))
    b12 -= b13 + k13
    b13 -= k14 + t0
    tmp = b11 xor b10
    b11 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b11 + k11
    b11 -= k12
    tmp = b9 xor b8
    b9 = (tmp shr 8) or (tmp shl (64 - 8))
    b8 -= b9 + k9
    b9 -= k10
    tmp = b7 xor b6
    b7 = (tmp shr 47) or (tmp shl (64 - 47))
    b6 -= b7 + k7
    b7 -= k8
    tmp = b5 xor b4
    b5 = (tmp shr 8) or (tmp shl (64 - 8))
    b4 -= b5 + k5
    b5 -= k6
    tmp = b3 xor b2
    b3 = (tmp shr 13) or (tmp shl (64 - 13))
    b2 -= b3 + k3
    b3 -= k4
    tmp = b1 xor b0
    b1 = (tmp shr 24) or (tmp shl (64 - 24))
    b0 -= b1 + k1
    b1 -= k2
    tmp = b7 xor b12
    b7 = (tmp shr 20) or (tmp shl (64 - 20))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 37) or (tmp shl (64 - 37))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 31) or (tmp shl (64 - 31))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 52) or (tmp shl (64 - 52))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 35) or (tmp shl (64 - 35))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 48) or (tmp shl (64 - 48))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 9) or (tmp shl (64 - 9))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 25) or (tmp shl (64 - 25))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 44) or (tmp shl (64 - 44))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 19) or (tmp shl (64 - 19))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 46) or (tmp shl (64 - 46))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 47) or (tmp shl (64 - 47))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 44) or (tmp shl (64 - 44))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 53) or (tmp shl (64 - 53))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 4) or (tmp shl (64 - 4))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 56) or (tmp shl (64 - 56))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 34) or (tmp shl (64 - 34))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 16) or (tmp shl (64 - 16))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 30) or (tmp shl (64 - 30))
    b14 -= b15 + k14 + t0
    b15 -= k15 + 17
    tmp = b13 xor b12
    b13 = (tmp shr 44) or (tmp shl (64 - 44))
    b12 -= b13 + k12
    b13 -= k13 + t2
    tmp = b11 xor b10
    b11 = (tmp shr 47) or (tmp shl (64 - 47))
    b10 -= b11 + k10
    b11 -= k11
    tmp = b9 xor b8
    b9 = (tmp shr 12) or (tmp shl (64 - 12))
    b8 -= b9 + k8
    b9 -= k9
    tmp = b7 xor b6
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b6 -= b7 + k6
    b7 -= k7
    tmp = b5 xor b4
    b5 = (tmp shr 37) or (tmp shl (64 - 37))
    b4 -= b5 + k4
    b5 -= k5
    tmp = b3 xor b2
    b3 = (tmp shr 9) or (tmp shl (64 - 9))
    b2 -= b3 + k2
    b3 -= k3
    tmp = b1 xor b0
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b0 -= b1 + k0
    b1 -= k1
    tmp = b7 xor b12
    b7 = (tmp shr 25) or (tmp shl (64 - 25))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 16) or (tmp shl (64 - 16))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 28) or (tmp shl (64 - 28))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 47) or (tmp shl (64 - 47))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 41) or (tmp shl (64 - 41))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 48) or (tmp shl (64 - 48))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 20) or (tmp shl (64 - 20))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 5) or (tmp shl (64 - 5))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 59) or (tmp shl (64 - 59))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 41) or (tmp shl (64 - 41))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 34) or (tmp shl (64 - 34))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 13) or (tmp shl (64 - 13))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 4) or (tmp shl (64 - 4))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 33) or (tmp shl (64 - 33))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 52) or (tmp shl (64 - 52))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 18) or (tmp shl (64 - 18))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 49) or (tmp shl (64 - 49))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 55) or (tmp shl (64 - 55))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 10) or (tmp shl (64 - 10))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 19) or (tmp shl (64 - 19))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 38) or (tmp shl (64 - 38))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 37) or (tmp shl (64 - 37))
    b14 -= b15 + k13 + t2
    b15 -= k14 + 16
    tmp = b13 xor b12
    b13 = (tmp shr 22) or (tmp shl (64 - 22))
    b12 -= b13 + k11
    b13 -= k12 + t1
    tmp = b11 xor b10
    b11 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b11 + k9
    b11 -= k10
    tmp = b9 xor b8
    b9 = (tmp shr 8) or (tmp shl (64 - 8))
    b8 -= b9 + k7
    b9 -= k8
    tmp = b7 xor b6
    b7 = (tmp shr 47) or (tmp shl (64 - 47))
    b6 -= b7 + k5
    b7 -= k6
    tmp = b5 xor b4
    b5 = (tmp shr 8) or (tmp shl (64 - 8))
    b4 -= b5 + k3
    b5 -= k4
    tmp = b3 xor b2
    b3 = (tmp shr 13) or (tmp shl (64 - 13))
    b2 -= b3 + k1
    b3 -= k2
    tmp = b1 xor b0
    b1 = (tmp shr 24) or (tmp shl (64 - 24))
    b0 -= b1 + k16
    b1 -= k0
    tmp = b7 xor b12
    b7 = (tmp shr 20) or (tmp shl (64 - 20))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 37) or (tmp shl (64 - 37))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 31) or (tmp shl (64 - 31))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 52) or (tmp shl (64 - 52))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 35) or (tmp shl (64 - 35))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 48) or (tmp shl (64 - 48))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 9) or (tmp shl (64 - 9))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 25) or (tmp shl (64 - 25))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 44) or (tmp shl (64 - 44))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 19) or (tmp shl (64 - 19))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 46) or (tmp shl (64 - 46))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 47) or (tmp shl (64 - 47))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 44) or (tmp shl (64 - 44))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 53) or (tmp shl (64 - 53))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 4) or (tmp shl (64 - 4))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 56) or (tmp shl (64 - 56))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 34) or (tmp shl (64 - 34))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 16) or (tmp shl (64 - 16))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 30) or (tmp shl (64 - 30))
    b14 -= b15 + k12 + t1
    b15 -= k13 + 15
    tmp = b13 xor b12
    b13 = (tmp shr 44) or (tmp shl (64 - 44))
    b12 -= b13 + k10
    b13 -= k11 + t0
    tmp = b11 xor b10
    b11 = (tmp shr 47) or (tmp shl (64 - 47))
    b10 -= b11 + k8
    b11 -= k9
    tmp = b9 xor b8
    b9 = (tmp shr 12) or (tmp shl (64 - 12))
    b8 -= b9 + k6
    b9 -= k7
    tmp = b7 xor b6
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b6 -= b7 + k4
    b7 -= k5
    tmp = b5 xor b4
    b5 = (tmp shr 37) or (tmp shl (64 - 37))
    b4 -= b5 + k2
    b5 -= k3
    tmp = b3 xor b2
    b3 = (tmp shr 9) or (tmp shl (64 - 9))
    b2 -= b3 + k0
    b3 -= k1
    tmp = b1 xor b0
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b0 -= b1 + k15
    b1 -= k16
    tmp = b7 xor b12
    b7 = (tmp shr 25) or (tmp shl (64 - 25))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 16) or (tmp shl (64 - 16))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 28) or (tmp shl (64 - 28))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 47) or (tmp shl (64 - 47))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 41) or (tmp shl (64 - 41))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 48) or (tmp shl (64 - 48))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 20) or (tmp shl (64 - 20))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 5) or (tmp shl (64 - 5))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 59) or (tmp shl (64 - 59))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 41) or (tmp shl (64 - 41))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 34) or (tmp shl (64 - 34))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 13) or (tmp shl (64 - 13))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 4) or (tmp shl (64 - 4))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 33) or (tmp shl (64 - 33))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 52) or (tmp shl (64 - 52))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 18) or (tmp shl (64 - 18))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 49) or (tmp shl (64 - 49))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 55) or (tmp shl (64 - 55))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 10) or (tmp shl (64 - 10))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 19) or (tmp shl (64 - 19))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 38) or (tmp shl (64 - 38))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 37) or (tmp shl (64 - 37))
    b14 -= b15 + k11 + t0
    b15 -= k12 + 14
    tmp = b13 xor b12
    b13 = (tmp shr 22) or (tmp shl (64 - 22))
    b12 -= b13 + k9
    b13 -= k10 + t2
    tmp = b11 xor b10
    b11 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b11 + k7
    b11 -= k8
    tmp = b9 xor b8
    b9 = (tmp shr 8) or (tmp shl (64 - 8))
    b8 -= b9 + k5
    b9 -= k6
    tmp = b7 xor b6
    b7 = (tmp shr 47) or (tmp shl (64 - 47))
    b6 -= b7 + k3
    b7 -= k4
    tmp = b5 xor b4
    b5 = (tmp shr 8) or (tmp shl (64 - 8))
    b4 -= b5 + k1
    b5 -= k2
    tmp = b3 xor b2
    b3 = (tmp shr 13) or (tmp shl (64 - 13))
    b2 -= b3 + k16
    b3 -= k0
    tmp = b1 xor b0
    b1 = (tmp shr 24) or (tmp shl (64 - 24))
    b0 -= b1 + k14
    b1 -= k15
    tmp = b7 xor b12
    b7 = (tmp shr 20) or (tmp shl (64 - 20))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 37) or (tmp shl (64 - 37))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 31) or (tmp shl (64 - 31))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 52) or (tmp shl (64 - 52))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 35) or (tmp shl (64 - 35))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 48) or (tmp shl (64 - 48))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 9) or (tmp shl (64 - 9))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 25) or (tmp shl (64 - 25))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 44) or (tmp shl (64 - 44))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 19) or (tmp shl (64 - 19))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 46) or (tmp shl (64 - 46))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 47) or (tmp shl (64 - 47))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 44) or (tmp shl (64 - 44))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 53) or (tmp shl (64 - 53))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 4) or (tmp shl (64 - 4))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 56) or (tmp shl (64 - 56))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 34) or (tmp shl (64 - 34))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 16) or (tmp shl (64 - 16))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 30) or (tmp shl (64 - 30))
    b14 -= b15 + k10 + t2
    b15 -= k11 + 13
    tmp = b13 xor b12
    b13 = (tmp shr 44) or (tmp shl (64 - 44))
    b12 -= b13 + k8
    b13 -= k9 + t1
    tmp = b11 xor b10
    b11 = (tmp shr 47) or (tmp shl (64 - 47))
    b10 -= b11 + k6
    b11 -= k7
    tmp = b9 xor b8
    b9 = (tmp shr 12) or (tmp shl (64 - 12))
    b8 -= b9 + k4
    b9 -= k5
    tmp = b7 xor b6
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b6 -= b7 + k2
    b7 -= k3
    tmp = b5 xor b4
    b5 = (tmp shr 37) or (tmp shl (64 - 37))
    b4 -= b5 + k0
    b5 -= k1
    tmp = b3 xor b2
    b3 = (tmp shr 9) or (tmp shl (64 - 9))
    b2 -= b3 + k15
    b3 -= k16
    tmp = b1 xor b0
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b0 -= b1 + k13
    b1 -= k14
    tmp = b7 xor b12
    b7 = (tmp shr 25) or (tmp shl (64 - 25))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 16) or (tmp shl (64 - 16))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 28) or (tmp shl (64 - 28))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 47) or (tmp shl (64 - 47))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 41) or (tmp shl (64 - 41))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 48) or (tmp shl (64 - 48))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 20) or (tmp shl (64 - 20))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 5) or (tmp shl (64 - 5))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 59) or (tmp shl (64 - 59))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 41) or (tmp shl (64 - 41))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 34) or (tmp shl (64 - 34))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 13) or (tmp shl (64 - 13))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 4) or (tmp shl (64 - 4))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 33) or (tmp shl (64 - 33))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 52) or (tmp shl (64 - 52))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 18) or (tmp shl (64 - 18))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 49) or (tmp shl (64 - 49))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 55) or (tmp shl (64 - 55))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 10) or (tmp shl (64 - 10))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 19) or (tmp shl (64 - 19))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 38) or (tmp shl (64 - 38))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 37) or (tmp shl (64 - 37))
    b14 -= b15 + k9 + t1
    b15 -= k10 + 12
    tmp = b13 xor b12
    b13 = (tmp shr 22) or (tmp shl (64 - 22))
    b12 -= b13 + k7
    b13 -= k8 + t0
    tmp = b11 xor b10
    b11 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b11 + k5
    b11 -= k6
    tmp = b9 xor b8
    b9 = (tmp shr 8) or (tmp shl (64 - 8))
    b8 -= b9 + k3
    b9 -= k4
    tmp = b7 xor b6
    b7 = (tmp shr 47) or (tmp shl (64 - 47))
    b6 -= b7 + k1
    b7 -= k2
    tmp = b5 xor b4
    b5 = (tmp shr 8) or (tmp shl (64 - 8))
    b4 -= b5 + k16
    b5 -= k0
    tmp = b3 xor b2
    b3 = (tmp shr 13) or (tmp shl (64 - 13))
    b2 -= b3 + k14
    b3 -= k15
    tmp = b1 xor b0
    b1 = (tmp shr 24) or (tmp shl (64 - 24))
    b0 -= b1 + k12
    b1 -= k13
    tmp = b7 xor b12
    b7 = (tmp shr 20) or (tmp shl (64 - 20))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 37) or (tmp shl (64 - 37))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 31) or (tmp shl (64 - 31))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 52) or (tmp shl (64 - 52))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 35) or (tmp shl (64 - 35))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 48) or (tmp shl (64 - 48))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 9) or (tmp shl (64 - 9))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 25) or (tmp shl (64 - 25))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 44) or (tmp shl (64 - 44))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 19) or (tmp shl (64 - 19))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 46) or (tmp shl (64 - 46))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 47) or (tmp shl (64 - 47))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 44) or (tmp shl (64 - 44))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 53) or (tmp shl (64 - 53))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 4) or (tmp shl (64 - 4))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 56) or (tmp shl (64 - 56))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 34) or (tmp shl (64 - 34))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 16) or (tmp shl (64 - 16))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 30) or (tmp shl (64 - 30))
    b14 -= b15 + k8 + t0
    b15 -= k9 + 11
    tmp = b13 xor b12
    b13 = (tmp shr 44) or (tmp shl (64 - 44))
    b12 -= b13 + k6
    b13 -= k7 + t2
    tmp = b11 xor b10
    b11 = (tmp shr 47) or (tmp shl (64 - 47))
    b10 -= b11 + k4
    b11 -= k5
    tmp = b9 xor b8
    b9 = (tmp shr 12) or (tmp shl (64 - 12))
    b8 -= b9 + k2
    b9 -= k3
    tmp = b7 xor b6
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b6 -= b7 + k0
    b7 -= k1
    tmp = b5 xor b4
    b5 = (tmp shr 37) or (tmp shl (64 - 37))
    b4 -= b5 + k15
    b5 -= k16
    tmp = b3 xor b2
    b3 = (tmp shr 9) or (tmp shl (64 - 9))
    b2 -= b3 + k13
    b3 -= k14
    tmp = b1 xor b0
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b0 -= b1 + k11
    b1 -= k12
    tmp = b7 xor b12
    b7 = (tmp shr 25) or (tmp shl (64 - 25))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 16) or (tmp shl (64 - 16))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 28) or (tmp shl (64 - 28))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 47) or (tmp shl (64 - 47))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 41) or (tmp shl (64 - 41))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 48) or (tmp shl (64 - 48))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 20) or (tmp shl (64 - 20))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 5) or (tmp shl (64 - 5))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 59) or (tmp shl (64 - 59))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 41) or (tmp shl (64 - 41))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 34) or (tmp shl (64 - 34))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 13) or (tmp shl (64 - 13))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 4) or (tmp shl (64 - 4))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 33) or (tmp shl (64 - 33))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 52) or (tmp shl (64 - 52))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 18) or (tmp shl (64 - 18))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 49) or (tmp shl (64 - 49))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 55) or (tmp shl (64 - 55))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 10) or (tmp shl (64 - 10))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 19) or (tmp shl (64 - 19))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 38) or (tmp shl (64 - 38))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 37) or (tmp shl (64 - 37))
    b14 -= b15 + k7 + t2
    b15 -= k8 + 10
    tmp = b13 xor b12
    b13 = (tmp shr 22) or (tmp shl (64 - 22))
    b12 -= b13 + k5
    b13 -= k6 + t1
    tmp = b11 xor b10
    b11 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b11 + k3
    b11 -= k4
    tmp = b9 xor b8
    b9 = (tmp shr 8) or (tmp shl (64 - 8))
    b8 -= b9 + k1
    b9 -= k2
    tmp = b7 xor b6
    b7 = (tmp shr 47) or (tmp shl (64 - 47))
    b6 -= b7 + k16
    b7 -= k0
    tmp = b5 xor b4
    b5 = (tmp shr 8) or (tmp shl (64 - 8))
    b4 -= b5 + k14
    b5 -= k15
    tmp = b3 xor b2
    b3 = (tmp shr 13) or (tmp shl (64 - 13))
    b2 -= b3 + k12
    b3 -= k13
    tmp = b1 xor b0
    b1 = (tmp shr 24) or (tmp shl (64 - 24))
    b0 -= b1 + k10
    b1 -= k11
    tmp = b7 xor b12
    b7 = (tmp shr 20) or (tmp shl (64 - 20))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 37) or (tmp shl (64 - 37))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 31) or (tmp shl (64 - 31))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 52) or (tmp shl (64 - 52))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 35) or (tmp shl (64 - 35))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 48) or (tmp shl (64 - 48))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 9) or (tmp shl (64 - 9))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 25) or (tmp shl (64 - 25))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 44) or (tmp shl (64 - 44))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 19) or (tmp shl (64 - 19))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 46) or (tmp shl (64 - 46))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 47) or (tmp shl (64 - 47))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 44) or (tmp shl (64 - 44))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 53) or (tmp shl (64 - 53))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 4) or (tmp shl (64 - 4))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 56) or (tmp shl (64 - 56))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 34) or (tmp shl (64 - 34))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 16) or (tmp shl (64 - 16))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 30) or (tmp shl (64 - 30))
    b14 -= b15 + k6 + t1
    b15 -= k7 + 9
    tmp = b13 xor b12
    b13 = (tmp shr 44) or (tmp shl (64 - 44))
    b12 -= b13 + k4
    b13 -= k5 + t0
    tmp = b11 xor b10
    b11 = (tmp shr 47) or (tmp shl (64 - 47))
    b10 -= b11 + k2
    b11 -= k3
    tmp = b9 xor b8
    b9 = (tmp shr 12) or (tmp shl (64 - 12))
    b8 -= b9 + k0
    b9 -= k1
    tmp = b7 xor b6
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b6 -= b7 + k15
    b7 -= k16
    tmp = b5 xor b4
    b5 = (tmp shr 37) or (tmp shl (64 - 37))
    b4 -= b5 + k13
    b5 -= k14
    tmp = b3 xor b2
    b3 = (tmp shr 9) or (tmp shl (64 - 9))
    b2 -= b3 + k11
    b3 -= k12
    tmp = b1 xor b0
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b0 -= b1 + k9
    b1 -= k10
    tmp = b7 xor b12
    b7 = (tmp shr 25) or (tmp shl (64 - 25))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 16) or (tmp shl (64 - 16))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 28) or (tmp shl (64 - 28))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 47) or (tmp shl (64 - 47))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 41) or (tmp shl (64 - 41))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 48) or (tmp shl (64 - 48))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 20) or (tmp shl (64 - 20))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 5) or (tmp shl (64 - 5))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 59) or (tmp shl (64 - 59))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 41) or (tmp shl (64 - 41))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 34) or (tmp shl (64 - 34))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 13) or (tmp shl (64 - 13))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 4) or (tmp shl (64 - 4))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 33) or (tmp shl (64 - 33))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 52) or (tmp shl (64 - 52))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 18) or (tmp shl (64 - 18))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 49) or (tmp shl (64 - 49))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 55) or (tmp shl (64 - 55))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 10) or (tmp shl (64 - 10))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 19) or (tmp shl (64 - 19))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 38) or (tmp shl (64 - 38))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 37) or (tmp shl (64 - 37))
    b14 -= b15 + k5 + t0
    b15 -= k6 + 8
    tmp = b13 xor b12
    b13 = (tmp shr 22) or (tmp shl (64 - 22))
    b12 -= b13 + k3
    b13 -= k4 + t2
    tmp = b11 xor b10
    b11 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b11 + k1
    b11 -= k2
    tmp = b9 xor b8
    b9 = (tmp shr 8) or (tmp shl (64 - 8))
    b8 -= b9 + k16
    b9 -= k0
    tmp = b7 xor b6
    b7 = (tmp shr 47) or (tmp shl (64 - 47))
    b6 -= b7 + k14
    b7 -= k15
    tmp = b5 xor b4
    b5 = (tmp shr 8) or (tmp shl (64 - 8))
    b4 -= b5 + k12
    b5 -= k13
    tmp = b3 xor b2
    b3 = (tmp shr 13) or (tmp shl (64 - 13))
    b2 -= b3 + k10
    b3 -= k11
    tmp = b1 xor b0
    b1 = (tmp shr 24) or (tmp shl (64 - 24))
    b0 -= b1 + k8
    b1 -= k9
    tmp = b7 xor b12
    b7 = (tmp shr 20) or (tmp shl (64 - 20))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 37) or (tmp shl (64 - 37))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 31) or (tmp shl (64 - 31))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 52) or (tmp shl (64 - 52))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 35) or (tmp shl (64 - 35))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 48) or (tmp shl (64 - 48))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 9) or (tmp shl (64 - 9))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 25) or (tmp shl (64 - 25))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 44) or (tmp shl (64 - 44))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 19) or (tmp shl (64 - 19))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 46) or (tmp shl (64 - 46))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 47) or (tmp shl (64 - 47))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 44) or (tmp shl (64 - 44))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 53) or (tmp shl (64 - 53))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 4) or (tmp shl (64 - 4))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 56) or (tmp shl (64 - 56))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 34) or (tmp shl (64 - 34))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 16) or (tmp shl (64 - 16))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 30) or (tmp shl (64 - 30))
    b14 -= b15 + k4 + t2
    b15 -= k5 + 7
    tmp = b13 xor b12
    b13 = (tmp shr 44) or (tmp shl (64 - 44))
    b12 -= b13 + k2
    b13 -= k3 + t1
    tmp = b11 xor b10
    b11 = (tmp shr 47) or (tmp shl (64 - 47))
    b10 -= b11 + k0
    b11 -= k1
    tmp = b9 xor b8
    b9 = (tmp shr 12) or (tmp shl (64 - 12))
    b8 -= b9 + k15
    b9 -= k16
    tmp = b7 xor b6
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b6 -= b7 + k13
    b7 -= k14
    tmp = b5 xor b4
    b5 = (tmp shr 37) or (tmp shl (64 - 37))
    b4 -= b5 + k11
    b5 -= k12
    tmp = b3 xor b2
    b3 = (tmp shr 9) or (tmp shl (64 - 9))
    b2 -= b3 + k9
    b3 -= k10
    tmp = b1 xor b0
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b0 -= b1 + k7
    b1 -= k8
    tmp = b7 xor b12
    b7 = (tmp shr 25) or (tmp shl (64 - 25))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 16) or (tmp shl (64 - 16))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 28) or (tmp shl (64 - 28))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 47) or (tmp shl (64 - 47))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 41) or (tmp shl (64 - 41))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 48) or (tmp shl (64 - 48))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 20) or (tmp shl (64 - 20))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 5) or (tmp shl (64 - 5))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 59) or (tmp shl (64 - 59))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 41) or (tmp shl (64 - 41))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 34) or (tmp shl (64 - 34))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 13) or (tmp shl (64 - 13))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 4) or (tmp shl (64 - 4))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 33) or (tmp shl (64 - 33))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 52) or (tmp shl (64 - 52))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 18) or (tmp shl (64 - 18))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 49) or (tmp shl (64 - 49))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 55) or (tmp shl (64 - 55))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 10) or (tmp shl (64 - 10))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 19) or (tmp shl (64 - 19))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 38) or (tmp shl (64 - 38))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 37) or (tmp shl (64 - 37))
    b14 -= b15 + k3 + t1
    b15 -= k4 + 6
    tmp = b13 xor b12
    b13 = (tmp shr 22) or (tmp shl (64 - 22))
    b12 -= b13 + k1
    b13 -= k2 + t0
    tmp = b11 xor b10
    b11 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b11 + k16
    b11 -= k0
    tmp = b9 xor b8
    b9 = (tmp shr 8) or (tmp shl (64 - 8))
    b8 -= b9 + k14
    b9 -= k15
    tmp = b7 xor b6
    b7 = (tmp shr 47) or (tmp shl (64 - 47))
    b6 -= b7 + k12
    b7 -= k13
    tmp = b5 xor b4
    b5 = (tmp shr 8) or (tmp shl (64 - 8))
    b4 -= b5 + k10
    b5 -= k11
    tmp = b3 xor b2
    b3 = (tmp shr 13) or (tmp shl (64 - 13))
    b2 -= b3 + k8
    b3 -= k9
    tmp = b1 xor b0
    b1 = (tmp shr 24) or (tmp shl (64 - 24))
    b0 -= b1 + k6
    b1 -= k7
    tmp = b7 xor b12
    b7 = (tmp shr 20) or (tmp shl (64 - 20))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 37) or (tmp shl (64 - 37))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 31) or (tmp shl (64 - 31))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 52) or (tmp shl (64 - 52))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 35) or (tmp shl (64 - 35))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 48) or (tmp shl (64 - 48))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 9) or (tmp shl (64 - 9))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 25) or (tmp shl (64 - 25))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 44) or (tmp shl (64 - 44))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 19) or (tmp shl (64 - 19))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 46) or (tmp shl (64 - 46))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 47) or (tmp shl (64 - 47))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 44) or (tmp shl (64 - 44))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 53) or (tmp shl (64 - 53))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 4) or (tmp shl (64 - 4))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 56) or (tmp shl (64 - 56))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 34) or (tmp shl (64 - 34))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 16) or (tmp shl (64 - 16))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 30) or (tmp shl (64 - 30))
    b14 -= b15 + k2 + t0
    b15 -= k3 + 5
    tmp = b13 xor b12
    b13 = (tmp shr 44) or (tmp shl (64 - 44))
    b12 -= b13 + k0
    b13 -= k1 + t2
    tmp = b11 xor b10
    b11 = (tmp shr 47) or (tmp shl (64 - 47))
    b10 -= b11 + k15
    b11 -= k16
    tmp = b9 xor b8
    b9 = (tmp shr 12) or (tmp shl (64 - 12))
    b8 -= b9 + k13
    b9 -= k14
    tmp = b7 xor b6
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b6 -= b7 + k11
    b7 -= k12
    tmp = b5 xor b4
    b5 = (tmp shr 37) or (tmp shl (64 - 37))
    b4 -= b5 + k9
    b5 -= k10
    tmp = b3 xor b2
    b3 = (tmp shr 9) or (tmp shl (64 - 9))
    b2 -= b3 + k7
    b3 -= k8
    tmp = b1 xor b0
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b0 -= b1 + k5
    b1 -= k6
    tmp = b7 xor b12
    b7 = (tmp shr 25) or (tmp shl (64 - 25))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 16) or (tmp shl (64 - 16))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 28) or (tmp shl (64 - 28))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 47) or (tmp shl (64 - 47))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 41) or (tmp shl (64 - 41))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 48) or (tmp shl (64 - 48))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 20) or (tmp shl (64 - 20))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 5) or (tmp shl (64 - 5))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 59) or (tmp shl (64 - 59))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 41) or (tmp shl (64 - 41))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 34) or (tmp shl (64 - 34))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 13) or (tmp shl (64 - 13))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 4) or (tmp shl (64 - 4))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 33) or (tmp shl (64 - 33))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 52) or (tmp shl (64 - 52))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 18) or (tmp shl (64 - 18))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 49) or (tmp shl (64 - 49))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 55) or (tmp shl (64 - 55))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 10) or (tmp shl (64 - 10))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 19) or (tmp shl (64 - 19))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 38) or (tmp shl (64 - 38))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 37) or (tmp shl (64 - 37))
    b14 -= b15 + k1 + t2
    b15 -= k2 + 4
    tmp = b13 xor b12
    b13 = (tmp shr 22) or (tmp shl (64 - 22))
    b12 -= b13 + k16
    b13 -= k0 + t1
    tmp = b11 xor b10
    b11 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b11 + k14
    b11 -= k15
    tmp = b9 xor b8
    b9 = (tmp shr 8) or (tmp shl (64 - 8))
    b8 -= b9 + k12
    b9 -= k13
    tmp = b7 xor b6
    b7 = (tmp shr 47) or (tmp shl (64 - 47))
    b6 -= b7 + k10
    b7 -= k11
    tmp = b5 xor b4
    b5 = (tmp shr 8) or (tmp shl (64 - 8))
    b4 -= b5 + k8
    b5 -= k9
    tmp = b3 xor b2
    b3 = (tmp shr 13) or (tmp shl (64 - 13))
    b2 -= b3 + k6
    b3 -= k7
    tmp = b1 xor b0
    b1 = (tmp shr 24) or (tmp shl (64 - 24))
    b0 -= b1 + k4
    b1 -= k5
    tmp = b7 xor b12
    b7 = (tmp shr 20) or (tmp shl (64 - 20))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 37) or (tmp shl (64 - 37))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 31) or (tmp shl (64 - 31))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 52) or (tmp shl (64 - 52))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 35) or (tmp shl (64 - 35))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 48) or (tmp shl (64 - 48))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 9) or (tmp shl (64 - 9))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 25) or (tmp shl (64 - 25))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 44) or (tmp shl (64 - 44))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 19) or (tmp shl (64 - 19))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 46) or (tmp shl (64 - 46))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 47) or (tmp shl (64 - 47))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 44) or (tmp shl (64 - 44))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 53) or (tmp shl (64 - 53))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 4) or (tmp shl (64 - 4))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 56) or (tmp shl (64 - 56))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 34) or (tmp shl (64 - 34))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 16) or (tmp shl (64 - 16))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 30) or (tmp shl (64 - 30))
    b14 -= b15 + k0 + t1
    b15 -= k1 + 3
    tmp = b13 xor b12
    b13 = (tmp shr 44) or (tmp shl (64 - 44))
    b12 -= b13 + k15
    b13 -= k16 + t0
    tmp = b11 xor b10
    b11 = (tmp shr 47) or (tmp shl (64 - 47))
    b10 -= b11 + k13
    b11 -= k14
    tmp = b9 xor b8
    b9 = (tmp shr 12) or (tmp shl (64 - 12))
    b8 -= b9 + k11
    b9 -= k12
    tmp = b7 xor b6
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b6 -= b7 + k9
    b7 -= k10
    tmp = b5 xor b4
    b5 = (tmp shr 37) or (tmp shl (64 - 37))
    b4 -= b5 + k7
    b5 -= k8
    tmp = b3 xor b2
    b3 = (tmp shr 9) or (tmp shl (64 - 9))
    b2 -= b3 + k5
    b3 -= k6
    tmp = b1 xor b0
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b0 -= b1 + k3
    b1 -= k4
    tmp = b7 xor b12
    b7 = (tmp shr 25) or (tmp shl (64 - 25))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 16) or (tmp shl (64 - 16))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 28) or (tmp shl (64 - 28))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 47) or (tmp shl (64 - 47))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 41) or (tmp shl (64 - 41))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 48) or (tmp shl (64 - 48))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 20) or (tmp shl (64 - 20))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 5) or (tmp shl (64 - 5))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 59) or (tmp shl (64 - 59))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 41) or (tmp shl (64 - 41))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 34) or (tmp shl (64 - 34))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 13) or (tmp shl (64 - 13))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 4) or (tmp shl (64 - 4))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 33) or (tmp shl (64 - 33))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 52) or (tmp shl (64 - 52))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 18) or (tmp shl (64 - 18))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 49) or (tmp shl (64 - 49))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 55) or (tmp shl (64 - 55))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 10) or (tmp shl (64 - 10))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 19) or (tmp shl (64 - 19))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 38) or (tmp shl (64 - 38))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 37) or (tmp shl (64 - 37))
    b14 -= b15 + k16 + t0
    b15 -= k0 + 2
    tmp = b13 xor b12
    b13 = (tmp shr 22) or (tmp shl (64 - 22))
    b12 -= b13 + k14
    b13 -= k15 + t2
    tmp = b11 xor b10
    b11 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b11 + k12
    b11 -= k13
    tmp = b9 xor b8
    b9 = (tmp shr 8) or (tmp shl (64 - 8))
    b8 -= b9 + k10
    b9 -= k11
    tmp = b7 xor b6
    b7 = (tmp shr 47) or (tmp shl (64 - 47))
    b6 -= b7 + k8
    b7 -= k9
    tmp = b5 xor b4
    b5 = (tmp shr 8) or (tmp shl (64 - 8))
    b4 -= b5 + k6
    b5 -= k7
    tmp = b3 xor b2
    b3 = (tmp shr 13) or (tmp shl (64 - 13))
    b2 -= b3 + k4
    b3 -= k5
    tmp = b1 xor b0
    b1 = (tmp shr 24) or (tmp shl (64 - 24))
    b0 -= b1 + k2
    b1 -= k3
    tmp = b7 xor b12
    b7 = (tmp shr 20) or (tmp shl (64 - 20))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 37) or (tmp shl (64 - 37))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 31) or (tmp shl (64 - 31))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 52) or (tmp shl (64 - 52))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 35) or (tmp shl (64 - 35))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 48) or (tmp shl (64 - 48))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 9) or (tmp shl (64 - 9))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 25) or (tmp shl (64 - 25))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 44) or (tmp shl (64 - 44))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 19) or (tmp shl (64 - 19))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 46) or (tmp shl (64 - 46))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 47) or (tmp shl (64 - 47))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 44) or (tmp shl (64 - 44))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 42) or (tmp shl (64 - 42))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 53) or (tmp shl (64 - 53))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 4) or (tmp shl (64 - 4))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 56) or (tmp shl (64 - 56))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 34) or (tmp shl (64 - 34))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 16) or (tmp shl (64 - 16))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 30) or (tmp shl (64 - 30))
    b14 -= b15 + k15 + t2
    b15 -= k16 + 1
    tmp = b13 xor b12
    b13 = (tmp shr 44) or (tmp shl (64 - 44))
    b12 -= b13 + k13
    b13 -= k14 + t1
    tmp = b11 xor b10
    b11 = (tmp shr 47) or (tmp shl (64 - 47))
    b10 -= b11 + k11
    b11 -= k12
    tmp = b9 xor b8
    b9 = (tmp shr 12) or (tmp shl (64 - 12))
    b8 -= b9 + k9
    b9 -= k10
    tmp = b7 xor b6
    b7 = (tmp shr 31) or (tmp shl (64 - 31))
    b6 -= b7 + k7
    b7 -= k8
    tmp = b5 xor b4
    b5 = (tmp shr 37) or (tmp shl (64 - 37))
    b4 -= b5 + k5
    b5 -= k6
    tmp = b3 xor b2
    b3 = (tmp shr 9) or (tmp shl (64 - 9))
    b2 -= b3 + k3
    b3 -= k4
    tmp = b1 xor b0
    b1 = (tmp shr 41) or (tmp shl (64 - 41))
    b0 -= b1 + k1
    b1 -= k2
    tmp = b7 xor b12
    b7 = (tmp shr 25) or (tmp shl (64 - 25))
    b12 -= b7
    tmp = b3 xor b10
    b3 = (tmp shr 16) or (tmp shl (64 - 16))
    b10 -= b3
    tmp = b5 xor b8
    b5 = (tmp shr 28) or (tmp shl (64 - 28))
    b8 -= b5
    tmp = b1 xor b14
    b1 = (tmp shr 47) or (tmp shl (64 - 47))
    b14 -= b1
    tmp = b9 xor b4
    b9 = (tmp shr 41) or (tmp shl (64 - 41))
    b4 -= b9
    tmp = b13 xor b6
    b13 = (tmp shr 48) or (tmp shl (64 - 48))
    b6 -= b13
    tmp = b11 xor b2
    b11 = (tmp shr 20) or (tmp shl (64 - 20))
    b2 -= b11
    tmp = b15 xor b0
    b15 = (tmp shr 5) or (tmp shl (64 - 5))
    b0 -= b15
    tmp = b9 xor b10
    b9 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b9
    tmp = b11 xor b8
    b11 = (tmp shr 59) or (tmp shl (64 - 59))
    b8 -= b11
    tmp = b13 xor b14
    b13 = (tmp shr 41) or (tmp shl (64 - 41))
    b14 -= b13
    tmp = b15 xor b12
    b15 = (tmp shr 34) or (tmp shl (64 - 34))
    b12 -= b15
    tmp = b1 xor b6
    b1 = (tmp shr 13) or (tmp shl (64 - 13))
    b6 -= b1
    tmp = b3 xor b4
    b3 = (tmp shr 51) or (tmp shl (64 - 51))
    b4 -= b3
    tmp = b5 xor b2
    b5 = (tmp shr 4) or (tmp shl (64 - 4))
    b2 -= b5
    tmp = b7 xor b0
    b7 = (tmp shr 33) or (tmp shl (64 - 33))
    b0 -= b7
    tmp = b1 xor b8
    b1 = (tmp shr 52) or (tmp shl (64 - 52))
    b8 -= b1
    tmp = b5 xor b14
    b5 = (tmp shr 23) or (tmp shl (64 - 23))
    b14 -= b5
    tmp = b3 xor b12
    b3 = (tmp shr 18) or (tmp shl (64 - 18))
    b12 -= b3
    tmp = b7 xor b10
    b7 = (tmp shr 49) or (tmp shl (64 - 49))
    b10 -= b7
    tmp = b15 xor b4
    b15 = (tmp shr 55) or (tmp shl (64 - 55))
    b4 -= b15
    tmp = b11 xor b6
    b11 = (tmp shr 10) or (tmp shl (64 - 10))
    b6 -= b11
    tmp = b13 xor b2
    b13 = (tmp shr 19) or (tmp shl (64 - 19))
    b2 -= b13
    tmp = b9 xor b0
    b9 = (tmp shr 38) or (tmp shl (64 - 38))
    b0 -= b9
    tmp = b15 xor b14
    b15 = (tmp shr 37) or (tmp shl (64 - 37))
    b14 -= b15 + k14 + t1
    b15 -= k15
    tmp = b13 xor b12
    b13 = (tmp shr 22) or (tmp shl (64 - 22))
    b12 -= b13 + k12
    b13 -= k13 + t0
    tmp = b11 xor b10
    b11 = (tmp shr 17) or (tmp shl (64 - 17))
    b10 -= b11 + k10
    b11 -= k11
    tmp = b9 xor b8
    b9 = (tmp shr 8) or (tmp shl (64 - 8))
    b8 -= b9 + k8
    b9 -= k9
    tmp = b7 xor b6
    b7 = (tmp shr 47) or (tmp shl (64 - 47))
    b6 -= b7 + k6
    b7 -= k7
    tmp = b5 xor b4
    b5 = (tmp shr 8) or (tmp shl (64 - 8))
    b4 -= b5 + k4
    b5 -= k5
    tmp = b3 xor b2
    b3 = (tmp shr 13) or (tmp shl (64 - 13))
    b2 -= b3 + k2
    b3 -= k3
    tmp = b1 xor b0
    b1 = (tmp shr 24) or (tmp shl (64 - 24))
    b0 -= b1 + k0
    b1 -= k1

  output[0] = b0
  output[1] = b1
  output[2] = b2
  output[3] = b3
  output[4] = b4
  output[5] = b5
  output[6] = b6
  output[7] = b7
  output[8] = b8
  output[9] = b9
  output[10] = b10
  output[11] = b11
  output[12] = b12
  output[13] = b13
  output[14] = b14
  output[15] = b15

proc newThreefish1024*(key: openarray[byte], tweak: openarray[uint64]): Threefish1024 =
  new(result)

  # initialize tweak
  setTweak(tweak, result.expandedTweak)

  result.expandedKey[ExpandedKeySize-1] = KeyScheduleConst

  # convert key bytes to required uint64 array
  if key.len > 0:
    var tmpkey: array[ExpandedKeySize, uint64]
    for i in 0..<ExpandedKeySize-1:
      tmpkey[i] = uint64le(key, i*8)
    setKey(tmpkey, result.expandedKey)

  result.encryptImpl = encrypt
  result.decryptImpl = decrypt
  result.getTempDataImpl = getTempData
  result.setTweakImpl = threefish1024.setTweak
  result.setKeyImpl = setKey
  result.stateSize = 1024

proc newThreefish1024*(key, tweak: openarray[uint64]): Threefish1024 =
  new(result)

  # initialize tweak
  setTweak(tweak, result.expandedKey)

  result.expandedKey[ExpandedKeySize-1] = KeyScheduleConst

  setKey(key, result.expandedKey)

  result.encryptImpl = encrypt
  result.decryptImpl = decrypt
  result.getTempDataImpl = getTempData
  result.setTweakImpl = threefish1024.setTweak
  result.setKeyImpl = setKey
  result.stateSize = 1024
